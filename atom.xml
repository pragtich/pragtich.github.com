<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text" xml:lang="en">Pragtich -- a blog</title>
  <link rel="self" type="application/atom+xml" href="https://www.pragti.ch/atom.xml" />
  <link rel="alternate" type="text/html" href="https://www.pragti.ch/blog"/>
  <updated>2020-01-11T16:18:17+01:00</updated>
  <author>
    <name>Joris Pragt</name>

  </author>
  <id>tag:pragti.ch,2013-02-09:/blog</id>
  <rights>Copyright (c) 2020, Joris Pragt; all rights reserved.</rights>


  <entry>
    <title type="text" xml:lang="en">Refurbishing an old Agria 400 mower</title>
    <id>tag:pragti.ch,2013-02-09:/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/"/>
    
    <published>2020-01-11T00:00:00+01:00</published>
    <updated>2020-01-11T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">Mooi prutsen met vette vingers</summary>
    <category term="mechanical" />
	<content type="html">&lt;h1&gt;Achtergrond&lt;/h1&gt;

&lt;p&gt;Ik heb een maaimachine gekocht om het hoge gras in ons weiland te kunnen maaien. Het is een Agria 400 eenassige tractor geworden, met een bijbehorende maaibalk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20191026_141054.jpg&quot; alt=&quot;De Agria 400&quot;&gt;&lt;/p&gt;

&lt;p&gt;De machine is 30 jaar oud, dus er zijn een paar kleine dingen niet 100% in orde. Zelf heb ik al de motor gereviseerd, en een paar afgebroken beugeltjes vervangen en binnenbanden in de wielen gezet.&lt;/p&gt;

&lt;p&gt;Wat er nog niet zo lekker is: de ophanging van de maaibalk is flink versleten.
Om de gereedschappen makkelijk te kunnen wisselen, hangt de maaibalk (oranje) in haken aan de motor (groen). Beide delen zijn flink uitgelopen, en er is wat afgebroken.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165034.jpg&quot; alt=&quot;Van de bovenkant&quot;&gt;&lt;/p&gt;

&lt;p&gt;Veel te veel speling. Aan deze kant (de bovenkant), maar ook aan de onderkant.&lt;/p&gt;

&lt;p&gt;Mijn vraag is: is het mogelijk dit te herstellen? De onderdelen zijn te koop bij Agria en als lassen niet gaat, doe ik dat. Maar ze zijn flink duur: het groene deel kost EUR 162, het oranje deel iets van EUR 150. 
Misschien kan ik ook sloop onderdelen vinden.&lt;/p&gt;

&lt;h1&gt;Groene deel&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165215.jpg&quot; alt=&quot;Steunpin&quot;&gt;&lt;/p&gt;

&lt;p&gt;Steunpin (de lange doorlopende pin) was bijna helemaal versleten aan de rechter kant. Ik heb hem eruit geslepen en een nieuwe 12mm pin gemaakt van een restje staal wat ik had liggen. Deze moet worden vastgelast. Oorspronkelijk was het gelast bij de beide ogen links en rechts, en in het midden.
Een van de ogen is uitgescheurd, waarschijnlijk handig om dat ook te lassen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165253.jpg&quot; alt=&quot;Oog gescheurd&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165226.jpg&quot; alt=&quot;Detail oog&quot;&gt; &lt;/p&gt;

&lt;p&gt;Missende stofkap (waar rode cirkel staat). Interesseert mij niet zo veel, kunnen we zo laten.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165302.jpg&quot; alt=&quot;Stofkapje&quot;&gt;&lt;/p&gt;

&lt;p&gt;Uitgesleten gebied rondom de sleuven waar de montage veren landen. Kan dit opgelast worden?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165329.jpg&quot; alt=&quot;Uitgesleten&quot;&gt;&lt;/p&gt;

&lt;p&gt;Uitgevreten ophanghaken. Oorspronkelijk zijn deze haken veel kleiner van vorm. Kan dit opgelast worden, of misschien een plaatje oplassen? In de tekening kunnen we ongeveer zien hoe het zat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/Tekening.png&quot; alt=&quot;Tekening&quot;&gt;
&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165347.jpg&quot; alt=&quot;Uitgevreten&quot;&gt;&lt;/p&gt;

&lt;p&gt;In de tekeningen kun je zien, dat er oorspronkelijk een gootje tussen de twee haken zit, zodat de druk verdeeld wordt. Je kunt de resten van de las nog zien zitten. Het zou mooi zijn om dat gootje weer te herstellen, gaat dat?&lt;/p&gt;

&lt;p&gt;In een ebay advertentie zag ik een plaatje van een machine waar het gootje duidelijk op staat:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_0010.jpg&quot; alt=&quot;Gootje&quot;&gt;&lt;/p&gt;

&lt;h1&gt;Oranje deel:&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165147.jpg&quot; alt=&quot;Scheurtjes&quot;&gt;&lt;/p&gt;

&lt;p&gt;Enkele scheuren rondom de montage gaten. Is het mogelijk deze te lassen?&lt;/p&gt;

&lt;p&gt;Inslijten van de draagstang. Dit is verergerd omdat de &amp;#39;goot&amp;#39; in het groene deel afgebroken is. Ik denk dat als we de &amp;#39;goot&amp;#39; in het groene deel kunnen herstellen, dat dit niet zo erg is.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165122.jpg&quot; alt=&quot;Slijtage&quot;&gt;
&lt;img src=&quot;/mechanical/2020/01/11/refurbishing-an-old-agria-400-mower/IMG_20200108_165449.jpg&quot; alt=&quot;Slijtage nokken&quot;&gt;&lt;/p&gt;

&lt;p&gt;Uitvreten van de dragende nokken links en rechts, maar vooral rechts. Kan dit opgelast worden? &lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">A battery powered Mysensors node from an Arduino Pro Mini clone</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2018/09/10/Uploading_bootloader_Pro_Mini</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2018/09/10/Uploading_bootloader_Pro_Mini/"/>
    
    <published>2018-09-10T00:00:00+02:00</published>
    <updated>2018-09-10T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">It is not very difficult to build a reasonably nice MySensors node based on very affordable hardware. This is a reminder for myself in order to be able to reproduce one.</summary>
    <category term="computer stuff" />
	<content type="html">&lt;h1&gt;A basic battery powered Mysensors node&lt;/h1&gt;

&lt;p&gt;Based on: &lt;a href=&quot;https://www.mysensors.org/build/battery&quot;&gt;the documentation by MySensors&lt;/a&gt; and a 3.3V 8MHz Arduino (clone) Pro Mini from the usual sources (&lt;a href=&quot;https://www.banggood.com/&quot;&gt;Banggood&lt;/a&gt;, &lt;a href=&quot;http://aliexpress.com/&quot;&gt;AliExpress&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.adafruit.com/wp-content/uploads/2016/07/promini_final.png&quot;&gt;Handy pinout guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perform the hardware mods from above link:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable power LED (either remove it or the resistor next to it).&lt;/li&gt;
&lt;li&gt;Remove voltage regulator (in this case I linked the in &amp;amp; out pins to be able to power through the &lt;code&gt;RAW&lt;/code&gt; pin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Make an Arduino ISP programmer&lt;/h1&gt;

&lt;p&gt;In order to reflash the bootloader, we need an In-System Programmer (ISP). It is possible to use another Arduino as the ISP, and I like to use another Pro Mini.&lt;/p&gt;

&lt;h2&gt;Hardware&lt;/h2&gt;

&lt;p&gt;I follow the following schematic: 
&lt;img src=&quot;/computer%20stuff/2018/09/10/Uploading_bootloader_Pro_Mini/ProMiniISP_bb.jpg&quot; alt=&quot;Fritzing schematic of Pro Mini ISP&quot;&gt;&lt;/p&gt;

&lt;p&gt;And in reality on a breadboard, it looks like this (with a LED added to pin 9):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/computer%20stuff/2018/09/10/Uploading_bootloader_Pro_Mini/ProMiniISP.jpg&quot; alt=&quot;Breadboard Pro Mini ISP&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Flash the ISP firmware&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Start the Arduino IDE&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;ArduinoISP&lt;/code&gt; sketch from &lt;a href=&quot;https://github.com/pragtich/Sensors/tree/master/ArduinoISP&quot;&gt;the repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Connect the ISP using a USB-serial connection&lt;/li&gt;
&lt;li&gt;Select board &lt;code&gt;Arduino Pro or Pro Mini&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Flash the sketch. &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Install boot loader:&lt;/h1&gt;

&lt;p&gt;In order to get a lower Brown Out voltage, we need to flash a new bootloader. Actually that&amp;#39;s not strictly required, but it&amp;#39;s the easiest way. I am using &lt;a href=&quot;https://www.openhardware.io/view/33/Various-bootloader-files-based-on-Optiboot-62&quot;&gt;Optiboot bootloaders compiled by Gert Sanders&lt;/a&gt;, so many thanks to him.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unpack rar in &lt;code&gt;Various-bootloader-files-based-on-Optiboot-62&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Move folder &lt;code&gt;atmega328p&lt;/code&gt; to &lt;code&gt;Arduino.app/Contents/Java/hardware&lt;/code&gt; (this is the OS X location)&lt;/li&gt;
&lt;li&gt;Start &lt;code&gt;Arduino.app&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select Tools-&amp;gt;Board-&amp;gt;&lt;code&gt;atmega328p based - 32 pin TQFP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;8MHz - crystal - 38K4 - D13&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Brown out detection - 1V8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select correct USB port&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Programmer: &amp;quot;Arduino as ISP&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tools-&amp;gt;Burn Bootloader&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Test&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Connect the board to the USB serial adapter (disconnect the ISP)&lt;/li&gt;
&lt;li&gt;Upload example Blink&lt;/li&gt;
&lt;li&gt;Upload Blink with modified timings&lt;/li&gt;
&lt;li&gt;I also like to try the &lt;code&gt;ASCIITable&lt;/code&gt; example&lt;/li&gt;
&lt;li&gt;Quit the Arduino IDE&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Upload the real script&lt;/h1&gt;

&lt;p&gt;I use platformio to run my projects, so uploading is pretty easy:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Switch to the project folder&lt;/li&gt;
&lt;li&gt;Edit baud rates in the &lt;code&gt;platformio.ini&lt;/code&gt;. I use &lt;code&gt;38400&lt;/code&gt; for upload and &lt;code&gt;9600&lt;/code&gt; for monitor.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pio run -t upload&lt;/code&gt; or if you want a debug monitor: &lt;code&gt;pio run -t upload -t monitor&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Installing LibreElec 8 on an Odroid C2</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2017/12/22/installing-libreelec-8-on-an-odroid-c2</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2017/12/22/installing-libreelec-8-on-an-odroid-c2/"/>
    
    <published>2017-12-22T00:00:00+01:00</published>
    <updated>2017-12-22T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">I had to do quite a few small changes to make LE 8 work as I want on my Odroid C2</summary>
    <category term="computer stuff" />
	<content type="html">&lt;h1&gt;Installing LE&lt;/h1&gt;

&lt;p&gt;Burning an SD card with the Libreelec utility did not work, but Etcher did the trick. I also switched from a 2 GB to an 8 GB card, perhaps that was a factor, too. &lt;/p&gt;

&lt;p&gt;Installed the image onto an SD card, so that I can switch back to the original installation if it doesn&amp;#39;t work out. I ended up using &lt;a href=&quot;http://releases.libreelec.tv/LibreELEC-Odroid_C2.aarch64-8.2.1.img.gz&quot;&gt;LibreELEC-Odroid_C2.aarch64-8.2.1.img.gz&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Recovering the library&lt;/h1&gt;

&lt;p&gt;This is where I was really happy to have the EMMC with the original Kodi image. It&amp;#39;s really easy to swap it in and out, so that you can get access to the original data and files.&lt;/p&gt;

&lt;p&gt;Exported the original library to a single file.&lt;/p&gt;

&lt;p&gt;Imported it again in the new install. Seemless. You do need to switch the skin to &lt;code&gt;Advanced&lt;/code&gt; mode in order to get access to the &lt;code&gt;Import&lt;/code&gt; and &lt;code&gt;Export&lt;/code&gt; functions.&lt;/p&gt;

&lt;p&gt;Browsing the network in order to open the library was a challenge at first. It helps if you set the &lt;code&gt;Workgroup&lt;/code&gt; to the same workgroup that your server is in. I had to change it in 2 places: The LibreElec Add-on and the Kodi network settings. Then, it worked.&lt;/p&gt;

&lt;h1&gt;Disable SSH password&lt;/h1&gt;

&lt;p&gt;SSH on Libreelec only supports the default user/pass combination (&lt;code&gt;root/libreelec&lt;/code&gt;). In order to secure this, I used &lt;code&gt;ssh-copy-key root@libreelec&lt;/code&gt; to copy my ssh keys to the device. You might need to make a key first, Google it.&lt;/p&gt;

&lt;p&gt;Then, disable the password login in the Libreelec settings addon in Kodi.&lt;/p&gt;

&lt;h1&gt;Disable blinking blue led&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://jbtronics.wordpress.com/2016/05/12/odroid-c2-change-the-function-of-the-blue-led/&quot;&gt;Followed this link&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The startup scripts in Libreelec are very simple, so actually you put the following into &lt;code&gt;/storage/.config/autostart.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;none &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/devices/gpio_leds.43/leds/blue:heartbeat/trigger
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then (using ssh):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;chmod a+x autostart.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another option for the trigger, is &lt;code&gt;default-on&lt;/code&gt;. I prefer this trigger in combination with a killing of the LED at shutdown, to confirm a safe shutdown state. This is in my &lt;code&gt;/Configfiles/shutdown.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in
  &lt;/span&gt;halt&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# your commands here&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;none &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/class/leds/blue&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;heartbeat/trigger
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  poweroff&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# your commands here&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;none &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/class/leds/blue&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;heartbeat/trigger
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  reboot&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# your commands here&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# your commands here&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Favourite plugins&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Youtube&lt;/li&gt;
&lt;li&gt;BSPlayer&lt;/li&gt;
&lt;li&gt;Arctic Zephyr&lt;/li&gt;
&lt;li&gt;Uitzendinggemist (NPO)&lt;/li&gt;
&lt;li&gt;Nederland 24&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Keymap changes&lt;/h1&gt;

&lt;p&gt;The Minix A2 Lite air mouse is quite nice, but the default support in Kodi is a bit lacking. You can improve it a lot with a few modifications. The first, is to be able to use the &lt;code&gt;back&lt;/code&gt; button properly.&lt;/p&gt;

&lt;p&gt;As a reference, &lt;a href=&quot;http://kodi.wiki/view/MINIX_A2&quot;&gt;the following site is really helpful, as it lists the key codes for the remote&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Back button goes back in menus&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.minixforum.com/threads/fix-a2-a2-lite-back-button-in-xbmc.3294/&quot;&gt;On the Odroid forum&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I created a file called &lt;code&gt;A2lite.xml&lt;/code&gt; into the Samba share &lt;code&gt;/Userdata/keymaps&lt;/code&gt; on the box. Restart (the skin?) and the back button behaves properly. Look at the forum posts for a few options, including automatically stopping the media playing.&lt;/p&gt;

&lt;p&gt;The file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;keymap&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;global&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;keyboard&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;backspace&amp;gt;&lt;/span&gt;Back&lt;span class=&quot;nt&quot;&gt;&amp;lt;/backspace&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;key&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'61467'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Back&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/keyboard&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/global&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FullscreenVideo&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;keyboard&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;backspace&amp;gt;&lt;/span&gt;Back&lt;span class=&quot;nt&quot;&gt;&amp;lt;/backspace&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/keyboard&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FullscreenVideo&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/keymap&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Subtitle shifting&lt;/h2&gt;

&lt;p&gt;I like to use the Fast Forward and Fast Reverse buttons to shift the sub delay. That way, it&amp;#39;s easy to fix small errors in timing. Also, I configure the key with the three horizontal lines, to switch subtitle options.&lt;/p&gt;

&lt;p&gt;A &lt;code&gt;Subs.xml&lt;/code&gt; could look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;keymap&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;global&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;keyboard&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;61654&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;contextmenu&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/keyboard&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/global&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;fullscreenvideo&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;keyboard&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;61654&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;nextsubtitle&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;61627&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;subtitledelayminus&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;61626&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;subtitledelayplus&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/keyboard&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/fullscreenvideo&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/keymap&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Getting LIRC to work&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Careful: this is untested and probably not really correct&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;cp /etc/lirc/lircd.conf.amremote /storage/.config/lircd.conf
reboot&lt;/p&gt;

&lt;p&gt;systemctl stop eventlircd.service 
systemctl stop lircd@lirc0:default:lircd.conf.amremote.service
ps aux|grep lirc&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;597 root       0:00 {kodi.sh} /bin/sh /usr/lib/kodi/kodi.sh --standalone -fs --lircdev /run/lirc/lircd
602 root       2:15 /usr/lib/kodi/kodi.bin --standalone -fs --lircdev /run/lirc/lircd
773 root       0:00 grep lirc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;irrecord --device /dev/lirc0 /storage/.config/lircd.conf&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Fixing an Alecto (Fine Offset) wind speed meter</title>
    <id>tag:pragti.ch,2013-02-09:/mechanical/2017/05/01/fixing-an-alecto-fine-offset-wind-speed-meter</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/mechanical/2017/05/01/fixing-an-alecto-fine-offset-wind-speed-meter/"/>
    
    <published>2017-05-01T00:00:00+02:00</published>
    <updated>2017-05-01T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">The Anemometer on my Alecto WS-3000 weather station died. It turned out to be an easy fix.</summary>
    <category term="mechanical" />
	<content type="html">&lt;h1&gt;Fixing the anemometer on an Alecto WS-3000 weather station&lt;/h1&gt;

&lt;p&gt;The Alecto WS-3000 has been a very popular weather station, due to its good price and good performance. It includes a large LCD base station with temperature, humidity and pressure monitoring, and an outside unit with temperature, humidity, rainfall and wind speed. It seems that it was manufactured by a Chinese company, known under the name Fine Offset. &lt;/p&gt;

&lt;p&gt;After a few years on the roof, the wind speed sensor stopped working. Sometimes it would turn freely, but mostly it would just bounce back and forth around one point. Figuring that it must be a very simple construction, I started exploring.&lt;/p&gt;

&lt;h1&gt;Fun, but not what we&amp;#39;re looking for&lt;/h1&gt;

&lt;p&gt;The three screws at the bottom looked like a good place to start. After removing them (very carefully), a look at the internals:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2017/05/01/fixing-an-alecto-fine-offset-wind-speed-meter/bottom1.jpg&quot; alt=&quot;What&amp;#39;s that?&quot; title=&quot;The internals&quot;&gt;&lt;/p&gt;

&lt;p&gt;Beneath a pile of spider carcasses, we find a small PCB with a reed relay. It&amp;#39;s mounted in the plane of rotation, and it seems to be switching twice per revolution. Besides for the spider&amp;#39;s remains, there seems to be some slight corrosion on the PCB. It is likely that some condensation in the anemometer caused this. Since it&amp;#39;s still working, let&amp;#39;s leave it as is.&lt;/p&gt;

&lt;h1&gt;So it must be under the dome&lt;/h1&gt;

&lt;p&gt;The culprit must be under the dome, then. Tricky: the plastic is starting to degrade somewhat and might not be very strong any more. Two large screwdrivers and some patience were in order. Eventually it came off in one piece, revealing the rotor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2017/05/01/fixing-an-alecto-fine-offset-wind-speed-meter/rotor.jpg&quot; alt=&quot;The rotor&quot; title=&quot;The rotor&quot;&gt;&lt;/p&gt;

&lt;p&gt;The rotor is really simple, it is a single injection molded piece with a small magnet pressed into it. The magnet rotates around the reed relay, causing it to switch.&lt;/p&gt;

&lt;p&gt;The rotor is pressed onto a bearing, which is heat staked onto the body of the anemometer. The bearing has clearly seized, it&amp;#39;s movement is crunchy and sometimes blocks altogether. I forgot to take a picture of this, but I promise that the bearing was there!&lt;/p&gt;

&lt;p&gt;Opening up the heat stake with a soldering iron was not the most fun I&amp;#39;ve ever had, but eventually:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/mechanical/2017/05/01/fixing-an-alecto-fine-offset-wind-speed-meter/body.jpg&quot; alt=&quot;The body&quot; title=&quot;The body&quot;&gt;&lt;/p&gt;

&lt;p&gt;Luckily, our Chinese friends chose a super-common bearing type that gets a lot of use in the RC world, so ordering replacements was a matter of minutes&amp;#39; work. It&amp;#39;s the MR105-2RS, a 5x10x4 mini bearing. Really easy to find. &lt;/p&gt;

&lt;p&gt;Putting things back together was simple enough, just a matter of pressing everything together carefully. It runs as it should again.&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Project Euler 37: Truncatable primes</title>
    <id>tag:pragti.ch,2013-02-09:/project%20euler/2015/01/20/project-euler-37-truncatable-primes</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/project%20euler/2015/01/20/project-euler-37-truncatable-primes/"/>
    
    <published>2015-01-20T00:00:00+01:00</published>
    <updated>2015-01-20T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">A fun little problem about primes, which has a nice solution.</summary>
    <category term="project euler" />
	<content type="html">&lt;h1&gt;Project Euler problem 37: Truncatable primes&lt;/h1&gt;

&lt;p&gt;I had some fun with &lt;a href=&quot;https://projecteuler.net/problem=37&quot;&gt;problem 37 in project Euler&lt;/a&gt;. The problem description states the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The number 3797 has an interesting property. Being prime itself, it is possible to continuously remove digits from left to right, and remain prime at each stage: 3797, 797, 97, and 7. Similarly we can work from right to left: 3797, 379, 37, and 3.&lt;/p&gt;

&lt;p&gt;Find the sum of the only eleven primes that are both truncatable from left to right and right to left.&lt;/p&gt;

&lt;p&gt;NOTE: 2, 3, 5, and 7 are not considered to be truncatable primes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First I solved this problem using the method that many followed, which is to start with a list of primes, and eliminate all primes that are not truncatable. This approach turned out to be quite slow (admittedly, my trying to do it in Excel did not help), and problematic on one critical point. How large should your largest prime be. There is no clear mechanism to prove what the maximum possible bidirectionally truncatable prime could be. Except &lt;a href=&quot;http://en.wikipedia.org/wiki/Truncatable_prime&quot;&gt;looking it up on Wikipedia&lt;/a&gt;. In fact, Excel was not really able to handle the number of lines that turned out to be required, as most people use a million primes.&lt;/p&gt;

&lt;h1&gt;A nicer solution&lt;/h1&gt;

&lt;p&gt;Actually, playing around out of dissatisfaction, I stumbled upon the way to actually prove the absolute number of bidirectionally truncatable primes, using the following thought process:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A bidirectionally truncatable prime is both right-truncatable and left-truncatable.&lt;/li&gt;
&lt;li&gt;Right-truncatable and left-truncatable primes may be constructed by a stepwise process adding one digit at a time and testing for primality.&lt;/li&gt;
&lt;li&gt;It can be proven when the maximum right- and left-truncatable primes have been found: the addition of the next digit does not deliver any primes.&lt;/li&gt;
&lt;li&gt;Because of point 2, this means that the intersection of left- and right-truncatable primes will probably have a finite size.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This approach needs no assumptions on the maximum size of the primes, and turns out to be very fast because of the stepwise algorithm, when a speedy primality test is used.&lt;/p&gt;

&lt;h1&gt;The algorithm itself&lt;/h1&gt;

&lt;p&gt;The algorithm itself is really simple:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;rtrunc_primes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rtrunc_primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ltrunc_primes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ltrunc_primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tprimes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rtrunc_primes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ltrunc_primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We simply get all right truncatable primes, all left truncatable primes and use the set intersection operator &lt;code&gt;&amp;amp;&lt;/code&gt; to get our answers. I make a sorted list in order to be able to drop the first 4 primes in the summation, as that is how &lt;a href=&quot;https://projecteuler.net/problem=37&quot;&gt;Project Euler problem 37&lt;/a&gt; is stated.&lt;/p&gt;

&lt;p&gt;I get the answer and the list of primes using these simple statements:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Truncatable primes: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tprimes&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sum minus 1-digit primes: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Number of truncatable primes: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Generating the right truncatable primes&lt;/h1&gt;

&lt;p&gt;Generating the right truncatable primes is the easy part.&lt;/p&gt;

&lt;p&gt;We have to consider that the 1-digit right truncatable primes are simply the 1-digit primes, that any additional digit needs to be a valid last digit for a prime and that the whole number must be prime. Since all primes above &lt;code&gt;9&lt;/code&gt; end on either a &lt;code&gt;1, 3, 7 or 9&lt;/code&gt;, this really reduces the number of tests required. Even without optimization this runs really quickly on modern systems. After some rewriting (still learning to use the list comprehensions in Python), this is my result:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;itertools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rtrunc_primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Generate a set of all right-truncatable primes&quot;&quot;&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rprimes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Seed with 1-digit primes&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rdigits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Only possible digits after first digit&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Continue as long as we have found a prime in the previous n&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nprimes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rdigits&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_prime&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rprimes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_iterable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Generating left truncatable primes&lt;/h1&gt;

&lt;p&gt;The left truncatable primes are slightly more difficult. But following the same logic, we start with the one-digit primes, then continue adding digits to the left until we no longer find a prime for a given digit length. So glad that Python does away with old-fashioned maximum limits on ineger sizes. In this case, there are more primes and the number of possible digits is larger, but still it runs in a blink of an eye on my systems.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ltrunc_primes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Generate a set of all left-truncatable primes&quot;&quot;&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lprimes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Seed with 1-digit primes&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ldigits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Only possible digits after first digit&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;factor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Continue as long as we have found a prime in the previous n&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;factor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# We need to stick the digits to the front, so mult with factor&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nprimes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factor&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ldigits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lprimes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_iterable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lprimes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Implementation of the primality test&lt;/h1&gt;

&lt;p&gt;Others have done a great job in coming up with all kinds of primality tests. Not being an expert, I &lt;a href=&quot;https://www.google.nl/search?q=primality+test+python&quot;&gt;used the force&lt;/a&gt; and found &lt;a href=&quot;http://rosettacode.org/wiki/Miller-Rabin_primality_test#Python:_Proved_correct_up_to_large_N&quot;&gt;a perfectly suitable solution&lt;/a&gt;. It may not have been proven up to the large numbers that end up being in the left-truncatable set, but it gives the correct result. In the end, the algorithm turns out to be correct, and would still be with a more rigorous primality test. This is the test that I pretty much &lt;a href=&quot;http://rosettacode.org/wiki/Miller-Rabin_primality_test#Python:_Proved_correct_up_to_large_N&quot;&gt;just copied&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;noscript&gt;&lt;pre&gt;# Primality testing as taken from http://rosettacode.org/wiki/Miller-Rabin&lt;em&gt;primality&lt;/em&gt;test#Python&lt;/p&gt;

&lt;h1&gt;Not proven for very large primes, but probably (?) right?&lt;/h1&gt;

&lt;h1&gt;TODO: try better set from http://miller-rabin.appspot.com/&lt;/h1&gt;

&lt;p&gt;def &lt;em&gt;try&lt;/em&gt;composite(a, d, n, s):
    if pow(a, d, n) == 1:
        return False
    for i in range(s):
        if pow(a, 2**i * d, n) == n-1:
            return False
    return True # n  is definitely composite&lt;/p&gt;

&lt;p&gt;def is&lt;em&gt;prime(n, _precision&lt;/em&gt;for&lt;em&gt;huge&lt;/em&gt;n=16):
    if n in &lt;em&gt;known&lt;/em&gt;primes or n in (0, 1):
        return True
    if any((n % p) == 0 for p in &lt;em&gt;known&lt;/em&gt;primes):
        return False
    d, s = n - 1, 0
    while not d % 2:
        d, s = d &amp;gt;&amp;gt; 1, s + 1
    # Returns exact according to http://primes.utm.edu/prove/prove2&lt;em&gt;3.html
    if n &amp;lt; 1373653: 
        return not any(&lt;/em&gt;try&lt;em&gt;composite(a, d, n, s) for a in (2, 3))
    if n &amp;lt; 25326001: 
        return not any(&lt;/em&gt;try&lt;em&gt;composite(a, d, n, s) for a in (2, 3, 5))
    if n &amp;lt; 118670087467: 
        if n == 3215031751: 
            return False
        return not any(&lt;/em&gt;try&lt;em&gt;composite(a, d, n, s) for a in (2, 3, 5, 7))
    if n &amp;lt; 2152302898747: 
        return not any(&lt;/em&gt;try&lt;em&gt;composite(a, d, n, s) for a in (2, 3, 5, 7, 11))
    if n &amp;lt; 3474749660383: 
        return not any(&lt;/em&gt;try&lt;em&gt;composite(a, d, n, s) for a in (2, 3, 5, 7, 11, 13))
    if n &amp;lt; 341550071728321: 
        return not any(&lt;/em&gt;try&lt;em&gt;composite(a, d, n, s) for a in (2, 3, 5, 7, 11, 13, 17))
    # otherwise
    return not any(&lt;/em&gt;try&lt;em&gt;composite(a, d, n, s) 
                   for a in _known&lt;/em&gt;primes[:&lt;em&gt;precision&lt;/em&gt;for&lt;em&gt;huge&lt;/em&gt;n])&lt;/p&gt;

&lt;p&gt;&lt;em&gt;known&lt;/em&gt;primes = [2, 3]
&lt;em&gt;known&lt;/em&gt;primes += [x for x in range(5, 1000, 2) if is_prime(x)]
&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/pragtich/8649385210b5b641506f.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Setting PATH for Emacs when launched from Dock</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2014/12/22/setting-path-for-emacs-when-launched-from-dock</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2014/12/22/setting-path-for-emacs-when-launched-from-dock/"/>
    
    <published>2014-12-22T00:00:00+01:00</published>
    <updated>2014-12-22T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">How to get Emacs' PATH setup properly so that python-mode will work</summary>
    <category term="computer stuff" />
	<content type="html">&lt;h1&gt;Setting PATH for applications started from the Dock in OS X 10.10 Yosemite&lt;/h1&gt;

&lt;p&gt;I recently switched from Fink to Homebrew, the most up-to-date packaging system for Mac OS X 10.10 Yosemite. With that, I also decided to install the Emacs 24.1 directly from Homebrew instead of from one of the OS X-specific compiled versions available. This works fine:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;brew install emacs --cocoa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, there is a problem: when an application is run from the Dock, it has only a very minimal environment, and it definitely does not get a PATH from any of the shell configuration files. Without this PATH, all kinds of things do not work. The first thing I noticed, was that python-mode was finding Mac OS&amp;#39;s builtin Python instead of my updated version.&lt;/p&gt;

&lt;h2&gt;Solution&lt;/h2&gt;

&lt;p&gt;We need a trick to start the program (Emacs in this case) from the shell, instead of straight from the Dock. This way, the shell will start with the limited environment, but will load its own profile files, thus delivering the standard PATH and other settings. The solution &lt;a href=&quot;https://korewanetadesu.com/emacs-on-os-x.html&quot;&gt;was given here&lt;/a&gt; &lt;a href=&quot;https://superuser.com/questions/828716/how-to-create-a-mac-app-launcher-for-emacs-via-homebrew&quot;&gt;and here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cocretely, I have attached an Automator script to the Dock, that starts Emacs for me. The drawback is, that even if you give it the same icon, the running instance of Emacs will get a separate icon on the dock. I have not yet found a solution for this, and am experiencing the same on Windows 7. Not a problem.&lt;/p&gt;

&lt;p&gt;The Automator code:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;echo '/Applications/Emacs.app/Contents/MacOS/Emacs &quot;$@&quot;' | bash --login -s &amp;amp;&amp;gt; /dev/null &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;&amp;amp;&amp;gt; /dev/null &amp;amp;&lt;/code&gt; part makes sure that the Automator task does not hang around waiting for the Emacs instance to exit or close its pipes. &lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Installing compiled images onto Beaglebone Black SD card</title>
    <id>tag:pragti.ch,2013-02-09:/kippycam/2013/10/10/installing-comiled-images-onto-beaglebone-black-sd-card</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/kippycam/2013/10/10/installing-comiled-images-onto-beaglebone-black-sd-card/"/>
    
    <published>2013-10-10T00:00:00+02:00</published>
    <updated>2013-10-10T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">So you've managed to compile an Angstrom Linux image. How to get it onto the Beaglebone?</summary>
    <category term="kippycam" />
	<content type="html">&lt;h1&gt;What&amp;#39;s the point?&lt;/h1&gt;

&lt;p&gt;So I managed to compile an image for the Beaglebone Black. The documentation is not bad, but it took some time to wait for some bugs to get updated in the &lt;code&gt;git&lt;/code&gt;. This was thanks to VirtualBox and Ubuntu, as compiling on OS X was too painful. Compiling pretty much followed the basis instructions &lt;a href=&quot;http://www.angstrom-distribution.org/building-angstrom&quot;&gt;at the main website&lt;/a&gt;. And I could see the image files available (hint: look in the subfolder &lt;code&gt;work&lt;/code&gt; and find the &lt;code&gt;deploy&lt;/code&gt; subfolder. &lt;/p&gt;

&lt;p&gt;But how to get this stuff onto the Beaglebone Black, and running?&lt;/p&gt;

&lt;h1&gt;Creating a bootable SD card for Beaglebone Black&lt;/h1&gt;

&lt;p&gt;Actually, someone before me &lt;a href=&quot;http://cwraig.id.au/?p=507&quot;&gt;has been considerate and shared his experience (locally) compiling and installing Angstrom for Beaglebone Black&lt;/a&gt;. This is pretty much a copy of what he does.&lt;/p&gt;

&lt;p&gt;Because of trouble getting a USB cardreader to show up un VirtualBox, and the incompatibility of the &lt;code&gt;mkcard.txt&lt;/code&gt; script with OS X, I decided to use the BBB itself to write the SD card. This is based on the standard firmware from the circuitco website. So that is the set of executables that I had available. I booted the BBB with a nonbooting card (so that it will boot from the eMMC). The SD card then is located at &lt;code&gt;/mnt/sda&lt;/code&gt;. The beaglebone is also on the network via the LAN port.&lt;/p&gt;

&lt;p&gt;Then:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
root@beaglebone:~# wget http://www.angstrom-distribution.org/demo/beaglebone/mkcard.txt
mkcard.txt mkcard.sh  
chmod +x mkcard.sh 
./mkcard.sh /dev/sda

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /mnt
mkdir Angstrom
mkdir boot
mount &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; vfat /dev/disk/by-label/boot boot
mount /dev/disk/by-label/Angstrom Angstrom/

df &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This results in the following confirmation that we have stuff mounted right:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
Filesystem      Size  Used Avail Use% Mounted on
rootfs          1.7G  1.1G  515M  69% /
/dev/root       1.7G  1.1G  515M  69% /
devtmpfs        250M     0  250M   0% /dev
tmpfs           250M  4.0K  250M   1% /dev/shm
tmpfs           250M  252K  250M   1% /run
tmpfs           250M     0  250M   0% /sys/fs/cgroup
tmpfs           250M  4.0K  250M   1% /tmp
/dev/mmcblk0p1   70M   55M   16M  79% /media/BEAGLEBONE
/dev/sda1        70M   512   70M   1% /mnt/boot
/dev/sda2       1.8G   35M  1.7G   3% /mnt/Angstrom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ready for installing the images!&lt;/p&gt;

&lt;h1&gt;Installing the images&lt;/h1&gt;

&lt;p&gt;Simply followed the stuff &lt;a href=&quot;http://cwraig.id.au/?p=507&quot;&gt;from here&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd
&lt;/span&gt;mkdir installs
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;installs
scp &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; pragtich@10.0.0.102user@host:~/compiled-image-deploy-folder &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;compiled-image-deploy-folder
cp u-boot-beaglebone-2013.04-r0.img /mnt/boot/uImage
cp MLO-beaglebone-2013.04 /mnt/boot/MLO
&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xmv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; /mnt/Angstrom/ &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; Angstrom-systemd-image-eglibc-ipk-v2012.12-beaglebone.rootfs.tar.gz 
umount /mnt/boot 
umount /mnt/Angstrom 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then reboot and...&lt;/p&gt;

&lt;h1&gt;Test!&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
root@beaglebone:~# uname &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
Linux beaglebone 3.8.13 &lt;span class=&quot;c&quot;&gt;#1 SMP Sun Oct 13 15:59:25 CEST 2013 armv7l GNU/Linux&lt;/span&gt;
root@beaglebone:~# ps aux
ps: invalid option &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;
BusyBox v1.20.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2013-09-14 09:40:16 CEST&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; multi-call binary.

Usage: ps 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So the smaller &lt;code&gt;ps&lt;/code&gt; delivered by &lt;code&gt;BusyBox&lt;/code&gt; is now active, not the richer GNU version in the default install. Running &lt;code&gt;ps&lt;/code&gt; also shows much less processes:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
root@beaglebone:~# ps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PID USER       VSZ STAT COMMAND
     1 root      4680 S    {systemd} /sbin/init
     2 root         0 SW   [kthreadd]
     3 root         0 SW   [ksoftirqd/0]
     4 root         0 SW   [kworker/0:0]
     5 root         0 SW&amp;lt;  [kworker/0:0H]
     6 root         0 SW   [kworker/u:0]
     7 root         0 SW&amp;lt;  [kworker/u:0H]
     8 root         0 SW   [migration/0]
     9 root         0 SW   [rcu&lt;em&gt;bh]
    10 root         0 SW   [rcu&lt;/em&gt;sched]
    11 root         0 SW   [watchdog/0]
    12 root         0 SW&amp;lt;  [khelper]
    13 root         0 SW   [kdevtmpfs]
    14 root         0 SW&amp;lt;  [netns]
    15 root         0 SW   [kworker/0:1]
    16 root         0 SW   [bdi-default]
    17 root         0 SW&amp;lt;  [kintegrityd]
    18 root         0 SW&amp;lt;  [kblockd]
    19 root         0 SW   [khubd]
    20 root         0 SW   [irq/86-44e0b000]
    21 root         0 SW   [kworker/u:1]
    24 root         0 SW   [irq/23-tps65217]
    27 root         0 SW   [irq/46-4819c000]
    36 root         0 SW&amp;lt;  [rpciod]
    38 root         0 SW   [khungtaskd]
    39 root         0 SW   [kswapd0]
    40 root         0 SW   [fsnotify&lt;em&gt;mark]
    41 root         0 SW&amp;lt;  [nfsiod]
    42 root         0 SW&amp;lt;  [crypto]
    45 root         0 SW&amp;lt;  [pencrypt]
    46 root         0 SW&amp;lt;  [pdecrypt]
    53 root         0 SW&amp;lt;  [OMAP UART0]
    57 root         0 SW&amp;lt;  [kpsmoused]
    58 root         0 SW   [irq/150-mmc0]
    70 root         0 SW   [kworker/u:2]
    71 root         0 DW   [mmcqd/0]
    74 root         0 SW   [mmcqd/1]
    75 root         0 SW   [mmcqd/1boot0]
    76 root         0 SW   [mmcqd/1boot1]
    77 root         0 SW&amp;lt;  [deferwq]
    80 root         0 SW&amp;lt;  [kworker/0:1H]
    81 root         0 SW   [jbd2/mmcblk0p2-]
    82 root         0 SW&amp;lt;  [ext4-dio-unwrit]
    89 root     36536 S    /lib/systemd/systemd-journald
    91 root      3428 S    /lib/systemd/systemd-udevd
    94 root         0 SW   [kworker/0:2]
    117 root         0 SW   [ext4lazyinit]
    204 root         0 SW   [flush-179:0]
    304 root      2976 S    /lib/systemd/systemd-logind
    305 root      2152 S    /sbin/klogd -n
    306 root      2216 S    /sbin/syslogd -n -C64
    308 root      5392 S    /usr/sbin/connmand -n
    309 avahi     3168 S    avahi-daemon: running [beaglebone.local]
    311 root      1844 S    /sbin/agetty -s ttyO0 115200
    312 root      1844 S    /sbin/agetty --noclear tty1 38400 linux
    317 avahi     3052 S    avahi-daemon: chroot helper
    323 root      4644 S    /usr/sbin/wpa&lt;/em&gt;supplicant -u
    327 root      2956 S    /usr/sbin/dropbear -i -r /etc/dropbear/dropbear&lt;em&gt;rsa&lt;/em&gt;host_key -p 22
    328 root      2332 S    -sh
    331 root      2332 R    ps
    root@beaglebone:~# ps&lt;/p&gt;

&lt;p&gt;Done!&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Editing jekyll postfiles plugin to work with spaces in category names</title>
    <id>tag:pragti.ch,2013-02-09:/blogging/2013/02/07/editing-jekyll-postfiles-plugin-to-work-with-spaces-in-category-names</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/blogging/2013/02/07/editing-jekyll-postfiles-plugin-to-work-with-spaces-in-category-names/"/>
    
    <published>2013-02-07T00:00:00+01:00</published>
    <updated>2013-02-07T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">I edited the postfiles plugin to work with category names containing special characters (especially spaces).</summary>
    <category term="blogging" />
	<content type="html">&lt;p&gt;I use &lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;the postfiles plugin by André Arko&lt;/a&gt; to add static files to the posts that I write. It is a great addition, because it allows to group the static files together with the post in a sensible way (although I still find myself searching for the correct folder name, and have added a rake task to make it easier to find, may blog on it later). However, I noticed a few issues in my blog, that has category names that include spaces. I assume that the same error occurs in other special characters, that get &lt;code&gt;CGI.escape&lt;/code&gt;d during processing by Jekyll.&lt;/p&gt;

&lt;h1&gt;The Cause (1/2)&lt;/h1&gt;

&lt;p&gt;In the &lt;a href=&quot;https://github.com/mojombo/jekyll/tree/master/lib/jekyll&quot;&gt;Jekyll source&lt;/a&gt;, each of the file types (Post, Page and StaticFile) have a &lt;code&gt;write&lt;/code&gt; method, that in turn calls &lt;code&gt;destination&lt;/code&gt; to calculate the correct file/folder name. I guess it is by design that the &lt;code&gt;StaticFile&lt;/code&gt; version uses the filenames verbatim, while &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;Page&lt;/code&gt; do some unescaping. I assume this was done because a static file typically has no Category, so will simply get its place in the filesystem under &lt;code&gt;_site&lt;/code&gt; without needing processing. In the &lt;code&gt;postfiles&lt;/code&gt; case, though, we are working with &lt;code&gt;CGI.encode&lt;/code&gt;d folder names because they were generated from the processing of the matching post.&lt;/p&gt;

&lt;p&gt;The lack of unescaping causes a &lt;code&gt;StaticFile&lt;/code&gt; that contains a special character in its category to have a path that contains a percent sign. For example, the category &lt;code&gt;Computer stuff&lt;/code&gt; will end up in the folder &lt;code&gt;_site/Computer stuff&lt;/code&gt;, but the &lt;code&gt;post.url&lt;/code&gt; will contain the string &lt;code&gt;Computer%20stuff&lt;/code&gt;. This ends up being a folder that the server cannot find, because it is uncoding the &lt;code&gt;%20&lt;/code&gt; again, to a space.&lt;/p&gt;

&lt;h1&gt;The Cause (2/2)&lt;/h1&gt;

&lt;p&gt;In &lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;the jekyll-postfiles plugin&lt;/a&gt;, there is a regexp that splits out the parts of the post id, to form the folder name where it searches for the postfiles. This regexp uses &lt;code&gt;[\s\w\/]*&lt;/code&gt; to parse away the leading path details. This chokes on the &lt;code&gt;CGI.encode&lt;/code&gt;d paths, because the word characters &lt;code&gt;\w&lt;/code&gt; do not match the percent sign &lt;code&gt;%&lt;/code&gt;. This leads to the leading part of the path not matching the regexp, thus generating incorrect paths.&lt;/p&gt;

&lt;h1&gt;The solutions&lt;/h1&gt;

&lt;p&gt;Easy.  Add percent to the pathname regexp:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;postfile_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/[\s\w\/%]*(\d{4})\/(\d\d)\/(\d\d)\/(.*)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\1-\2-\3-\4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and &lt;code&gt;CGI.decode&lt;/code&gt; the directory portion of the filename before passing it back to Jekyll:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;      &lt;span class=&quot;c1&quot;&gt;# Add a static file entry for each postfile, if any&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postfile_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
          &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;static_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PostFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postfile_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CGI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;unescape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The diff of my edits can be &lt;a href=&quot;https://github.com/pragtich/jekyll-postfiles/commit/ec519615501cbbc6d603854eaa463f1f9e0fe777&quot;&gt;found here on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;Making it permanent&lt;/h1&gt;

&lt;p&gt;I have created a pull request against &lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;the jekyll-postfiles plugin&lt;/a&gt;, &lt;a href=&quot;https://github.com/indirect/jekyll-postfiles/pull/4&quot;&gt;which can be found here&lt;/a&gt;. It was subsequently accepted by the owner, so is now a permanent part of the repo. &lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Migrating from nanoc to jekyll</title>
    <id>tag:pragti.ch,2013-02-09:/blogging/2013/02/03/migrating-from-nanoc-to-jekyll</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/blogging/2013/02/03/migrating-from-nanoc-to-jekyll/"/>
    
    <published>2013-02-03T00:00:00+01:00</published>
    <updated>2013-02-03T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">I started a blog (this blog) using Nanoc last year, as a method to learn Ruby. Although it is great, especially because it allows complete control, my Ruby skills are not up to nanoc. I kept on getting stuck doing programming myself, and fighting all kinds of bugs. This is the log of an attempt to reduce complexity by switching to Jekyll</summary>
    <category term="blogging" />
	<content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;I had started with a website/blog last year &lt;a href=&quot;http://pragti.ch/&quot;&gt;and even took the effort to host it&lt;/a&gt; and enjoy the experience. Especially getting feedback in the comments, and learning that others are enjoying my notes, is great fun. I had started using &lt;code&gt;nanoc&lt;/code&gt; &lt;a href=&quot;http://nanoc.ws/&quot;&gt;(here)&lt;/a&gt; as a generator for the site. It&amp;#39;s great, because it allows you to generate a static site from a set of source files. I love this, because it meets many of my criteria for a blogging engine:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Static generation. Why waste server power generating a page on every view when it actually hardly changes?&lt;/li&gt;
&lt;li&gt;Modularity. Split form and content as much as possible.&lt;/li&gt;
&lt;li&gt;Flexibility. Ability to adapt to my wishes.&lt;/li&gt;
&lt;li&gt;Fun. Learn something new.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, I am moving away from &lt;code&gt;nanoc&lt;/code&gt;, and switching to &lt;code&gt;jekyll&lt;/code&gt;. Why? Because &lt;code&gt;nanoc&lt;/code&gt; is a little too complex for my taste. It can just do too much, and requires serious &lt;code&gt;ruby&lt;/code&gt; skills. &lt;code&gt;Jekyll&lt;/code&gt; is simpler, really made for much more simple blogging tasks that &lt;code&gt;nanoc&lt;/code&gt; is. After plugins and extensions have been added, the flexibility is good and the simplicity is still great.&lt;/p&gt;

&lt;h1&gt;Setting up Jekyll&lt;/h1&gt;

&lt;p&gt;Setting up &lt;code&gt;jekyll&lt;/code&gt; is easy. Just follow &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/install&quot;&gt;the instructions on the jekyll site&lt;/a&gt;, as easy as:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that I later switched to extended jekyll, see below.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;The documentation for &lt;code&gt;jekyll&lt;/code&gt;&lt;/a&gt; is good, although structure is a bit lacking. If you read through this, it will be much clearer. Especially useful is studying the &lt;a href=&quot;http://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquid documentation&lt;/a&gt; and the &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Liquid-Extensions&quot;&gt;Jekyll Liquid extensions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Configuring happens through &lt;code&gt;_config.yml&lt;/code&gt;, and I have the following in there:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;permalink: pretty      # Required for the postfiles plugin
lsi: true              # Will be useful for related pages later on
markdown: kramdown     # I like kramdown
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Switching to Jekyll_ext&lt;/h1&gt;

&lt;p&gt;In order to be able to extend &lt;code&gt;jekyll&lt;/code&gt; with stuff that will allow me to use Haml and Sass, I installed &lt;code&gt;jekyll_ext&lt;/code&gt; &lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;from github&lt;/a&gt;. Although I do call &lt;code&gt;ejekyll&lt;/code&gt; instead of &lt;code&gt;jekyll&lt;/code&gt; already, I am not at present using any of its functionality yet.&lt;/p&gt;

&lt;h1&gt;Adding jekyll-postfiles&lt;/h1&gt;

&lt;p&gt;One of the big troubles with &lt;code&gt;jekyll&lt;/code&gt; is that it does not have any concept of files that belong together with a post as a logical unit. This could mainly be relevant for images, but also stuff like downloads. I had started with one central subfolder in the jekyll folder. That works, but means that each post needs to link to this one folder, and that all the images are going to run together into one folder. &lt;/p&gt;

&lt;p&gt;This is solved by &lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;the &lt;code&gt;jekyll-postfiles&lt;/code&gt; plugin&lt;/a&gt; by Andre Arko. Check it out. What it does, is allow you to put the files belonging to a post in the &lt;code&gt;_postfiles/&lt;/code&gt; folder, in a subfolder named like the post itself. So, the post &lt;code&gt;_posts/2012-12-31-Test.md&lt;/code&gt; would have a matching folder &lt;code&gt;_postfiles/2012-12-31-Test/&lt;/code&gt; where the matching files can be put.&lt;/p&gt;

&lt;p&gt;Also, it gives you a Liquid tag that allows you access to the files from your post without needing to know where exactly the files are. It works like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;{% postfile file.zip %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;Check it out!&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Using Haml and Sass&lt;/h1&gt;

&lt;p&gt;Using Haml and Sass needs plugins that can get closely involved in the generation process. This cannot be done with the standard &lt;code&gt;jekyll&lt;/code&gt; plugins. There is another extension mechanism that can do it: &lt;a href=&quot;https://github.com/rfelix/jekyll_ext&quot;&gt;&lt;code&gt;jekyll_ext&lt;/code&gt;&lt;/a&gt;. I am not yet using the tools that are based upon this, but will do in the future. I love Haml and Sass.&lt;/p&gt;

&lt;h1&gt;Migrating the layouts&lt;/h1&gt;

&lt;p&gt;I have several layouts in the site, and they turned out to need only small changes. Mainly, adjusting for a slightly changed folder structure and adding liquid tags instead of ERB code. All layouts except &lt;code&gt;default&lt;/code&gt; have a YAML Front Matter that points to the &lt;code&gt;default&lt;/code&gt; layout, which adds the navigation portion of the page and the whole HTML base of the page. &lt;/p&gt;

&lt;h2&gt;Layout: default&lt;/h2&gt;

&lt;p&gt;Adds the HTML boilerplate, CSS links and navigation to the site. Each page should end up passing through &lt;code&gt;default&lt;/code&gt; last. Because it is last, it does not have a YAML Front Matter.&lt;/p&gt;

&lt;p&gt;For navigation links, I changed the hardcoded URLS in the original to the following Liquid structure. That should allow switching from the test environment to the production environment URLs easily (not verified yet).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&amp;lt;a href=&quot;{{ site.url }}/blog/index.html&quot;&amp;gt;Index of all articles&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, Jekyll gives you the opportunity to access all the categories and tags in the site, so the navigation bar content changed to something like this (makes use of the category pages generated by the plugin mentioned below):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&amp;lt;H2&amp;gt;Categories&amp;lt;/h2&amp;gt;
&amp;lt;ul&amp;gt;
  {% for cat in site.categories %}
    &amp;lt;li&amp;gt;
      &amp;lt;a href=&quot;{{ site.url }}/categories/{{ cat[0] | downcase | replace: ' ','-' | cgi_escape}}&quot;&amp;gt;{{ cat[0] }}&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
   {{  }}
  {% endfor %}
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Layout: Index&lt;/h2&gt;

&lt;p&gt;The index layout is really simple. It is meant for the main blog index page only. All it does is wrap the page content in &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; tags and pass it on to &lt;code&gt;default&lt;/code&gt;. Easy.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;---
layout: default
---
&amp;lt;article&amp;gt;
{{content}}  
&amp;lt;/article&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Layout: category_index&lt;/h2&gt;

&lt;p&gt;This layout is meant for the autogenerated category indes pages (see below). It again wraps the content in an &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; tag, and then it loops through all articles in this category to list them one by one. I want to reduce the redundancy between this one and the content of my main index page (which is very similar), but that will be future work.&lt;/p&gt;

&lt;p&gt;This is the entire thing:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;---
layout: default
---
&amp;lt;article&amp;gt;
&amp;lt;h1 &amp;gt;{{ page.title }}&amp;lt;/h1&amp;gt;
&amp;lt;ul &amp;gt;
{% for post in site.categories[page.category] %}
    &amp;lt;indextitle&amp;gt;&amp;lt;a href=&quot;{{ post.url }}&quot;&amp;gt;{{ post.title }}&amp;lt;/a&amp;gt;
      {% if post.indeximage %}
      &amp;lt;IMG SRC=&quot;{{ site.baseurl }}/indeximages/{{ post.indeximage }}&quot;/&amp;gt;
      {% endif %}

      &amp;lt;h2 class=&quot;itemdate&quot;&amp;gt;{{ post.date | date_to_html_string }}
      &amp;lt;BR&amp;gt;
      Filed under {{ post.categories | category_links }}&amp;lt;/h2&amp;gt;
    &amp;lt;/indextitle&amp;gt;
    &amp;lt;summary&amp;gt;
      {{ post.summary }}
    &amp;lt;/summary&amp;gt;
{% endfor %}
&amp;lt;/ul&amp;gt;
&amp;lt;/article&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Layout: post&lt;/h2&gt;

&lt;p&gt;This layout is used for all actual blog posts. It lays out each article, and adds some comment stuff below that. This is how it looks:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;---
layout: default
---
&amp;lt;article&amp;gt;
  &amp;lt;header&amp;gt;
    &amp;lt;hgroup&amp;gt;
      {% if page.indeximage %}&amp;lt;img src=&quot;{{ site.url }}/indeximages/{{ page.indeximage }}&quot;&amp;gt;{% endif %}
      &amp;lt;h1 class=&quot;itemtitle&quot;&amp;gt;{{ page.title }}&amp;lt;/h1&amp;gt;
      &amp;lt;h2 class=&quot;itemdate&quot;&amp;gt;{{ page.date | date_to_string }}&amp;lt;/h2&amp;gt;
    &amp;lt;/hgroup&amp;gt;
  &amp;lt;/header&amp;gt;
  &amp;lt;summary&amp;gt;
    {{ page.summary }}
&amp;lt;/summary&amp;gt;
&amp;lt;bodytext&amp;gt;
  {{ content }}
&amp;lt;footer&amp;gt;
  &amp;lt;p&amp;gt;
  &amp;lt;/p&amp;gt;
  &amp;lt;div id=&quot;disqus_thread&quot;&amp;gt;&amp;lt;/div&amp;gt;
      .... Stuff from DISQUS ...
  &amp;lt;/a&amp;gt;
&amp;lt;/footer&amp;gt;
&amp;lt;/article&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Category navigation&lt;/h1&gt;

&lt;p&gt;In order to automatically generate category pages, I installed the plugin &lt;a href=&quot;http://recursive-design.com/projects/jekyll-plugins/&quot;&gt;from this website&lt;/a&gt;. It works. That&amp;#39;s what is creating the navigation bar contents, seen above. It does replace spaces in category names by hyphens, so the above code does that, too.&lt;/p&gt;

&lt;p&gt;I did encounter an issue with special characters in the category names (most notably spaces). I have blogged about the fix &lt;a href=&quot;/blogging/2013/02/07/editing-jekyll-postfiles-plugin-to-work-with-spaces-in-category-names/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A second issue, is that this creates lowercase category folder names, but my links in the navigation bar are with uppercase characters, too. So links break on the &lt;code&gt;github&lt;/code&gt; server, because it is case sensitive where my OS X is not. That&amp;#39;s why I added a &lt;code&gt;downcase&lt;/code&gt; to the &lt;code&gt;Liquid&lt;/code&gt; code in the &lt;code&gt;default&lt;/code&gt; layout.&lt;/p&gt;

&lt;h1&gt;Rakefile to make things more useable&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;postfiles&lt;/code&gt; plugin is great, but I do not like the ergonomics of creating the folders. The names are long, and I need to recognize all of it. So, I wrote a rake task to perform the duty of creating the postfiles folder for a specific post.&lt;/p&gt;

&lt;p&gt;Assuming that the user usually wants to add a postfile to today&amp;#39;s post, the default behaviour is to make a folder for today&amp;#39;s post if &lt;code&gt;rake postfile&lt;/code&gt; is typed. In order to select another post, the user can search using &lt;code&gt;rake postfile title=&amp;quot;searchtext&amp;quot;&lt;/code&gt;. If several hits are found, a menu is shown.&lt;/p&gt;

&lt;p&gt;This is the part of the &lt;a href=&quot;https://github.com/pragtich/pragtich-blog-jekyll/blob/master/Rakefile&quot;&gt;&lt;code&gt;Rakefile&lt;/code&gt;&lt;/a&gt; that does this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rake'&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'yaml'&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'time'&lt;/span&gt;
 &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'highline/import'&lt;/span&gt;

 &lt;span class=&quot;no&quot;&gt;SOURCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;
 &lt;span class=&quot;no&quot;&gt;CONFIG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;s1&quot;&gt;'layouts'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SOURCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_layouts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
   &lt;span class=&quot;s1&quot;&gt;'posts'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SOURCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_posts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
   &lt;span class=&quot;s1&quot;&gt;'postfiles'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SOURCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_postfiles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
   &lt;span class=&quot;s1&quot;&gt;'post_ext'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;md&quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# Usage: rake postfile [title=&quot;search string&quot;]&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Creates a  postfiles folder for a specific post (selected by title (filename) substring search and choose menu, or the latest one if no title given)&quot;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:postfile&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;abort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rake aborted: '&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postfiles'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' directory not found.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FileTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;directory?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postfiles'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;searchstring&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%Y-%m-%d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;myfiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'posts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/*.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'post_ext'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;myfiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Regexp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'post_ext'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;myfiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Regexp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'posts'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;\//&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;myfiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;select!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;abort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;No file found. Please rake postfiles title=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;searchstring&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; to indicate what you want or leave empty for today's files&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; 
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;mychoice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; 
   &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;mychoice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choose&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prompt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Please choose which file to add a postfile folder to: &quot;&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:abort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;abort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;You cancelled. Too bad.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;myfiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Chosen: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mychoice&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;thefolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CONFIG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postfiles'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mychoice&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;abort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Folder &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thefolder&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; already exists&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thefolder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

   &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Making folder &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thefolder&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; for your postfiles.&quot;&lt;/span&gt;
   &lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mkdir_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thefolder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# task :postfile&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Also, I stole parts of the &lt;code&gt;Rakefile&lt;/code&gt; from &lt;a href=&quot;https://raw.github.com/plusjade/jekyll-bootstrap/master/Rakefile&quot;&gt;Jekyll-bootstrap&lt;/a&gt;. Especially, the &lt;code&gt;post&lt;/code&gt; and &lt;code&gt;preview&lt;/code&gt; commands I really like. I did edit them to meet my tastes, please see &lt;a href=&quot;https://github.com/pragtich/pragtich-blog-jekyll/blob/source/Rakefile&quot;&gt;the file on GitHub&lt;/a&gt;. &lt;/p&gt;

&lt;h1&gt;Migrating the posts&lt;/h1&gt;

&lt;p&gt;As I had only a few posts, I decided to migrate them by hand. This involved:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Moving the post file to the &lt;code&gt;_posts/&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Renaming the file with the &lt;code&gt;yyyy-mm-dd-title.ext&lt;/code&gt; pattern (I was previously using a &lt;code&gt;created_at&lt;/code&gt; tag in the &lt;code&gt;YAML&lt;/code&gt; of the post).&lt;/li&gt;
&lt;li&gt;Adding &lt;code&gt;layout:post&lt;/code&gt; to the YAML front matter.&lt;/li&gt;
&lt;li&gt;Copying the images to the &lt;code&gt;_postfiles/&lt;/code&gt; folder (using my rake helper) and updating the references to the new Liquid tag.&lt;/li&gt;
&lt;li&gt;Copy any index images to the &lt;code&gt;indeximages/&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Testing.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Even though it was only two handfuls of posts, this turned out to be a bit tedious. Especially going through all the files for the internal links and referencing them to the correct place was a drag.&lt;/p&gt;

&lt;h1&gt;Old links&lt;/h1&gt;

&lt;p&gt;I have not found a way to keep my old links alive. Good thing I was giving DISQUS some unique IDs for the posts, at least that makes the comments still follow the posts to the new place. I could make dummy pages with redirects, but I am too lazy. This is not a high-traffic site, right?&lt;/p&gt;

&lt;h1&gt;Deploying to github-pages&lt;/h1&gt;

&lt;p&gt;The &lt;a href=&quot;https://help.github.com/categories/20/articles&quot;&gt;help for Github pages&lt;/a&gt; is quite clear. The trick was to migrate from my original repo to the new one, them being completely separate before. I will probably go back to the strategy that I followed for &lt;code&gt;nanoc&lt;/code&gt;.That is, to keep the source and output together in one repository with the &lt;code&gt;source&lt;/code&gt; branch containing the source and the &lt;code&gt;master&lt;/code&gt; branch containing the site itself. This does require some trickery in the &lt;code&gt;Rakefile&lt;/code&gt;. A drawback is that this deployment can break if git is not happy switching branches, but has the benefit that all files are kept together in the repo so all history is kept together.&lt;/p&gt;

&lt;p&gt;First, I created the correct branch structure:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;git checkout -b source
git checkout master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, I remodel the master branch to contain only the files from the _site folder. I edit the README file to make clear what&amp;#39;s going on. And I add a &lt;code&gt;.nojekyll&lt;/code&gt; file to tell Github not to try and process it itself. Finally, I make sure that the new source folder gets pushed to the origin (Github).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;rm -rf xxxx yyyy zzzz         # all files except _site/ and README
mv _site/* .
rm -rf _site

touch .nojekyll

vi README

git commit -A 
git push -u origin source
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, I need to come up with a Rakefile that does the correct processing, something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Check that I am on the source branch, or fail.&lt;/li&gt;
&lt;li&gt;Compile using &lt;code&gt;ejekyll&lt;/code&gt; with the &lt;code&gt;--url&lt;/code&gt; option set for the server url.&lt;/li&gt;
&lt;li&gt;Checkout master&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pragtich/pragtich-blog-jekyll/blob/source/Rakefile&quot;&gt;Check out my latest Rakefile to check how I did it&lt;/a&gt;. Specifically, I made a deployment sub-rakefile in the &lt;code&gt;_rake/&lt;/code&gt; subfolder. &lt;a href=&quot;https://github.com/pragtich/pragtich-blog-jekyll/tree/source/_rake&quot;&gt;Check it out if you want&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Using multiple webcams in mjpg-streamer on OpenWRT</title>
    <id>tag:pragti.ch,2013-02-09:/kippycam/2013/01/02/Mjpg-streamer-multiple</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/kippycam/2013/01/02/Mjpg-streamer-multiple/"/>
    
    <published>2013-01-02T00:00:00+01:00</published>
    <updated>2013-01-02T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">OpenWRT actually contains everything needed to run two or even more webcams with mjpg-streamer. But there is a bug in the init script that prevents it from working properly. This is an easy fix.</summary>
    <category term="kippycam" />
	<content type="html">&lt;h1&gt;The init file problem&lt;/h1&gt;

&lt;p&gt;For my Kippycam project, I am trying to run the mjpg-streamer with various instances, so that I can stream from multiple cameras from my TL-WR3020 or TL-WR703N routers. There is a nice init and config system that comes with the mjpg-streamer package in OpenWRT, that does most of the work. It puts configuration for the server in the UCI file &lt;code&gt;/etc/config/mjpg-streamer&lt;/code&gt;, and the &lt;code&gt;/etc/init.d/mjpg-streamer&lt;/code&gt; script actually loops over any possible configurations already. So, to instantiate multiple servers, I only need to add a second server definition in the config file. &lt;/p&gt;

&lt;p&gt;BUT, then I get the following error in the logfile, and the second server does not start:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: Using V4L2 device.: /dev/video0
Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: Desired Resolution: 640 x 481
Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: Frames Per Second.: 2
Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: Format............: MJPEG
Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: init_VideoIn failed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The key is they incorrectly detected device name &lt;code&gt;/dev/video0&lt;/code&gt; for the second camera. This is simply the default hardcoded into mjpg-streamer. It is not properly picking up the device name. Then, trying to open &lt;code&gt;/dev/video0&lt;/code&gt; a second time, will of course fail.&lt;/p&gt;

&lt;h1&gt;The solution&lt;/h1&gt;

&lt;p&gt;I do not understand the root cause fully, but it is clear that the &lt;code&gt;/etc/init.d/mjpg-streamer&lt;/code&gt; script contains some layout so that it is more legible. This layout does, however, introduce some whitespace into the command line that is causing our trouble. I will leave analysis of the true root cause to the experts, but describe the quick and dirty solution.&lt;/p&gt;

&lt;p&gt;This is a part of the original file, below. The problem is with the line continuation with slashes.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
start_instance&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

    section_enabled &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;1

    config_get device &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'device'&lt;/span&gt;
    config_get resolution &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'resolution'&lt;/span&gt;
    config_get fps &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fps'&lt;/span&gt;
    config_get www &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'www'&lt;/span&gt;
    config_get port &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'port'&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        error &lt;span class=&quot;s2&quot;&gt;&quot;device '&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' does not exist&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;1
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    service_start /usr/bin/mjpg_streamer &lt;span class=&quot;nt&quot;&gt;--input&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;input_uvc.so &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  # &amp;lt;=== Problem is here
        --device &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --fps &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fps&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --resolution &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$resolution&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;output_http.so --www &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$www&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --port &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I simply removed the backslashed line continuations and put everything in one line, and that solves the issue for me:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
service_start /usr/bin/mjpg_streamer &lt;span class=&quot;nt&quot;&gt;--input&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;input_uvc.so --device &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --fps &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fps&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --resolution &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$resolution&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;output_http.so --www &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$www&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --port &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Correcting PIDfile issue&lt;/h1&gt;

&lt;p&gt;There is a second issue, because the default &lt;code&gt;service_start&lt;/code&gt; behaviour is to prevent starting of multiple instances of the same daemon. So, we need to explicitly make sure that it does make multiple instances for us (because we are asking nicely). There are several ways to this, but I chose to explicitly help by supplying a pid file name for each camera. By using the unique configuration name from the config file, these will be unique. It is an easy edit in two places of &lt;code&gt;/etc/init.d/mjpg-streamer&lt;/code&gt;. First, the function &lt;code&gt;start_instance&lt;/code&gt; again:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
start_instance&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

    section_enabled &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;1

    &lt;span class=&quot;nv&quot;&gt;SERVICE_PID_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PIDLOC&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.pid

    config_get device &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'device'&lt;/span&gt;
    config_get resolution &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'resolution'&lt;/span&gt;
    config_get fps &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fps'&lt;/span&gt;
    config_get www &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'www'&lt;/span&gt;
    config_get port &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'port'&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        error &lt;span class=&quot;s2&quot;&gt;&quot;device '&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;' does not exist&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;1
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    service_start /usr/bin/mjpg_streamer &lt;span class=&quot;nt&quot;&gt;--input&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;input_uvc.so --device &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --fps &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fps&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --resolution &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$resolution&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;output_http.so --www &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$www&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --port &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So in short, I generate a &lt;code&gt;$SERVICE_PID_FILE&lt;/code&gt; that uniquely identifies the service. Of course, for killing the service we need to go back to the same pidfile:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
stop_instance&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

    section_enabled &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;1

    &lt;span class=&quot;nv&quot;&gt;SERVICE_PID_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PIDLOC&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.pid

    service_stop /usr/bin/mjpg_streamer
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Configuration&lt;/h1&gt;

&lt;p&gt;Now, it is really easy to edit &lt;code&gt;/etc/config/mjpg-streamer&lt;/code&gt; for multiple devices. Do be careful not to exceed the memory of your device, and also the USB and memory bandwidths, or you may make the device very unstable. Adding a name for each &lt;code&gt;config&lt;/code&gt; heading is not strictly necessary, but very helpful as it gives some identification. I am assuming that each device has a fixed &lt;code&gt;/dev/video&lt;/code&gt; devicename, which is the case on my device as long as I do not replug any camera.&lt;/p&gt;

&lt;p&gt;This is my config file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;config mjpg-streamer c920
    option device       &quot;/dev/video0&quot;
    option enabled      &quot;1&quot;
    option resolution   &quot;960x720&quot;   
    option fps      &quot;3&quot;
    option www      &quot;/www/webcam&quot;
    option port     &quot;8080&quot;

config mjpg-streamer logi
    option enabled      &quot;1&quot;
    option device       &quot;/dev/video1&quot;
    option resolution   &quot;640x480&quot;
    option fps      &quot;2&quot;
    option www      &quot;/www/webcam&quot;
    option port     &quot;8081&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Version update&lt;/h1&gt;

&lt;p&gt;The packages version of the mjpg-streamer was old. I actually compiled my own version of mjpg-streamer by updating the packages &lt;code&gt;Makefile&lt;/code&gt; in the OpenWRT buildroot. A nice description of the process of building with buildroot is what I roughly followed &lt;a href=&quot;https://forum.openwrt.org/viewtopic.php?id=34676&quot;&gt;from this post in the forums&lt;/a&gt;, which links to &lt;a href=&quot;http://wiki.openwrt.org/doc/howto/build&quot;&gt;this wiki page after installing the prerequisites&lt;/a&gt;. After &lt;code&gt;./scripts/feeds install -a&lt;/code&gt;, I found the Makefile for mjpg-streamer (somewhere in &lt;code&gt;tmp&lt;/code&gt;, if I remember correctly) and updated it to the latest SVN revision number. This did solve some instability issues I was facing with random reboots, so I highly recommemd going this way. &lt;/p&gt;

&lt;p&gt;Again, maybe I should learn how to submit patches for OpenWRT to help improve it...&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Switching to GNU Emacs 24 on Mac OS X</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2012/12/15/GNU-Emacs-24</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2012/12/15/GNU-Emacs-24/"/>
    
    <published>2012-12-15T00:00:00+01:00</published>
    <updated>2012-12-15T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">The new GNU Emacs 24 has native Cocoa support, so I wanted to switch. Not completely trivial, but possible.</summary>
    <category term="computer stuff" />
	<content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;I downloaded the native Cocoa emacs &lt;a href=&quot;http://emacsformacosx.com/&quot;&gt;from here&lt;/a&gt;. Since the new version 24, GNU Emacs is supposed to really work well in OS X. So I am trying what happens if I ditch Aquamacs for GNU Emacs 24. This is how I&amp;#39;m getting on.&lt;/p&gt;

&lt;h1&gt;Starting up&lt;/h1&gt;

&lt;p&gt;Emacs.app does not deliver the standard startup scripts where you
would expect them. And sadly, when you simply &lt;code&gt;ln -s&lt;/code&gt; the Emacs files
to &lt;code&gt;/usr/local/bin&lt;/code&gt; or &lt;code&gt;/usr/bin&lt;/code&gt;, it breaks with a very unfriendly
error message that actually refers to folders that do not exist on
this system, but did on the build system!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;#!console
$ ln -s /Applications/Emacs.app/Contents/MacOS/Emacs emacs
$ ./emacs
Warning: arch-dependent data dir (/Users/david/src/emacs-dev/ftp-versions/emacs-24.2/nextstep/Emacs.app/Contents/MacOS//libexec/emacs/24.2/x86_64-apple-darwin/) does not exist.
Warning: arch-independent data dir (/Users/david/src/emacs-dev/ftp-versions/emacs-24.2/nextstep/Emacs.app/Contents/Resources/share/emacs/24.2/etc/) does not exist.
Error: charsets directory not found:
/Users/david/src/emacs-dev/ftp-versions/emacs-24.2/nextstep/Emacs.app/Contents/Resources/share/emacs/24.2/etc/charsets
Emacs will not function correctly without the character map files.
Please check your installation!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is due to the relocatability of the App, and apparently it does
not handle being launched from the wrong place
properly. &lt;a href=&quot;https://github.com/mxcl/homebrew/issues/6661&quot;&gt;The homebrew people&lt;/a&gt;
have looked at this and concluded that it is a bug in Emacs. And
&lt;a href=&quot;http://trac.macports.org/ticket/36502&quot;&gt;the Macports people have also found it&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I came a long way using the strategies that some of the people on the
web were using, namely with wrapper scripts or functions. Problem is
that these use the OS X builtin &lt;code&gt;open&lt;/code&gt;, which has several
limitations. For one, it does not allow to load nonexistent files so
you need to make the nonexistent files yourself and delete them
afterwards if not edited. And it breaks the &lt;code&gt;-nw&lt;/code&gt; option (which you
use to get a text console instead of a graphical frame).&lt;/p&gt;

&lt;h1&gt;Solution&lt;/h1&gt;

&lt;h2&gt;Editing my PATH&lt;/h2&gt;

&lt;p&gt;In the end, the solution is quite easy. Just gave up and added the
Emacs.app folder to early in my &lt;code&gt;PATH&lt;/code&gt;. So, added to &lt;code&gt;~/.bashrc&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/Applications/Emacs.app/Contents/MacOS:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;PATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Strangely, the Emacs.app executable is called &lt;code&gt;Emacs&lt;/code&gt; instead of the
normal &lt;code&gt;emacs&lt;/code&gt;. Thankfully, the OS X filesystem is case-insensitive by
default, so it works to type &lt;code&gt;emacs&lt;/code&gt; anyway.&lt;/p&gt;

&lt;h2&gt;Removing the old files and referring to the right emacsclient&lt;/h2&gt;

&lt;p&gt;The standard emacs that comes with OS X is very old and you really do
not want the confusion between the two versions. So, I did:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mv /usr/bin/emacs /usr/bin/emacs.orig
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mv /usr/bin/emacsclient /usr/bin/emacsclient.orig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then it is a good idea to put the new &lt;code&gt;emacsclient&lt;/code&gt; in a standard
location (but not &lt;code&gt;/usr/bin&lt;/code&gt;, because this is a system place that
could get overwritten whenever Apple wants to):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
ln &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Emacs.app/Contents/MacOS/bin/emacsclient /usr/local/bin/emacsclient
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Setting up some aliases&lt;/h2&gt;

&lt;p&gt;In my &lt;code&gt;~/.bash_profile&lt;/code&gt;, I setup some environment variables to allow
easy access to the editor through the alias &lt;code&gt;e&lt;/code&gt;. This should
automatically launch emacs when it is not yet running, or connect to
it using &lt;code&gt;emacsclient&lt;/code&gt; if it is. I had some trouble when &lt;code&gt;ssh&lt;/code&gt;&amp;#39;ing into the machine, because somehow the correct socket file would not be found. That would give the following error message. It was fixed by adding the &lt;code&gt;-s&lt;/code&gt; option. This works most of the time, although when autostarting the &lt;code&gt;Emacs&lt;/code&gt; binary from &lt;code&gt;emacsclient&lt;/code&gt;, all options are dropped by &lt;code&gt;emacsclient&lt;/code&gt;, so things like &lt;code&gt;-nw&lt;/code&gt; will not stick. Maybe I will make a function to copy the arguments and stick them back into Emacs, but this is a marginal case so I will leave it for now. Just need to remember to start Emacs with &lt;code&gt;-nw&lt;/code&gt; when working in a text only environment.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;emacsclient: can't find socket; have you started the server?
To start the server in Emacs, type &quot;M-x server-start&quot;.
emacsclient: No socket or alternate editor.  Please use:

    --socket-name
    --server-file      (or environment variable EMACS_SERVER_FILE)
    --alternate-editor (or environment variable ALTERNATE_EDITOR)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also fill some editor variables that tell other programs that they
should launch emacs when they want to edit a file. This is my
&lt;code&gt;~/.bash_profile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Get the aliases and functions&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.bashrc &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; ~/.bashrc
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Read autocomplete stuff if present (Fink)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; /sw/etc/bash_completion &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; /sw/etc/bash_completion
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Initialize Fink (paths mainly)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; /sw/bin/init.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; /sw/bin/init.sh

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;emacsclient -s &quot;&lt;/span&gt;/tmp/emacs&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;UID&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/server&lt;span class=&quot;s2&quot;&gt;&quot; -a Emacs &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;\$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VISUAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EDITOR&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GIT_EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VISUAL&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; +0&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VISUAL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Setting up server mode&lt;/h2&gt;

&lt;p&gt;To start the emacs server when emacs starts, you need to add the following to &lt;code&gt;~/.emacs&lt;/code&gt;. I needed to provide a stable place for the sockets, otherwise they break when &lt;code&gt;ssh&lt;/code&gt;&amp;#39;in in. Don&amp;#39;t understand why.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;(setq server-socket-dir (format &quot;/tmp/emacs%d&quot; (user-uid))) 
(server-start)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Migrating my settings&lt;/h1&gt;

&lt;p&gt;I am converting from Aquamacs to Emacs 24, so I need to convert my setting file. Aquamacs keeps its settings in the Library: &lt;code&gt;~/Library/Preferences/Aquamacs Emacs/Preferences.el&lt;/code&gt; and Emacs keeps the settings in the standard location &lt;code&gt;~/.emacs&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;I just copied everything in my Preferences.el underneath the skeleton &lt;code&gt;.emacs&lt;/code&gt; that Emacs 24 had created for me, which contained next to nothing but some default tab settings and some code to enable the &lt;code&gt;ELPA&lt;/code&gt; package manager.&lt;/p&gt;

&lt;p&gt;There are probably some things that I do that are obsolete, but I will sort that out later. For example, Emacs 24 has a built in color theme manager, and I am still referring to an older package. I will try to work with it like this for now, and study the changes as time goes by.&lt;/p&gt;

&lt;p&gt;I will also probably need a local lisp file to set platform specific things, for example file locations. Most of the stuff could then stay in the general &lt;code&gt;.emacs&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Some differences&lt;/h2&gt;

&lt;p&gt;It seems that Aquamacs has some different defaults than GNU Emacs. I changed a few things to become more consistent. First, let&amp;#39;s get rid of the startup screen that shows together with your first file (I know how to get help anyway). And let&amp;#39;s also drop the ugly toolbar.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;(setq inhibit-startup-echo-area-message t)
(setq inhibit-startup-message t)
(tool-bar-mode -1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, raising of the windows seems not to be automatic. Whenever I start Emacs from the Terminal, I need to CMD-Tab there. Annoying as hell. &lt;a href=&quot;http://stackoverflow.com/questions/945709/emacs-23-os-x-multi-tty-and-emacsclient&quot;&gt;The fix was quite easy, thankfully&lt;/a&gt;. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;(select-frame-set-input-focus (nth 0 (frame-list)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Getting the most out of it&lt;/h1&gt;

&lt;h2&gt;Reading&lt;/h2&gt;

&lt;p&gt;A very nice Emacs blog is &lt;a href=&quot;http://www.masteringemacs.org/&quot;&gt;Mastering Emacs&lt;/a&gt;. It has a nice 2-part series on Emacs 24 that &lt;a href=&quot;http://www.masteringemacs.org/articles/2011/12/06/what-is-new-in-emacs-24-part-1/&quot;&gt;starts here&lt;/a&gt;. I am slowly going through it because there&amp;#39;s lots to learn.&lt;/p&gt;

&lt;h2&gt;Enabling package management&lt;/h2&gt;

&lt;p&gt;Added the following to &lt;code&gt;~/.emacs&lt;/code&gt; (and deleted some package stuff that was left from before).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;(require 'package)
(add-to-list 'package-archives '(&quot;marmalade&quot; . &quot;http://marmalade-repo.org/packages/&quot;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now I can list the packages available with &lt;code&gt;M-x list-packages&lt;/code&gt;. Need to start learning how that works.&lt;/p&gt;

&lt;h2&gt;Using Magit&lt;/h2&gt;

&lt;p&gt;i used the package manager to install Magit. A great frontend to &lt;code&gt;git&lt;/code&gt;!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;M-x list-packages

; find magit
i    ; for install
x    ; for execute
y    ; for yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to avoid typing &lt;code&gt;magit-status&lt;/code&gt; a lot, I bound it to a key in &lt;code&gt;~/.emacs&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;(global-set-key (kbd &quot;C-x g&quot;) 'magit-status)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Enabling Ido mode&lt;/h2&gt;

&lt;p&gt;Although it has been around, I had not yet heard of Ido mode. &lt;a href=&quot;http://www.masteringemacs.org/articles/2010/10/10/introduction-to-ido-mode/&quot;&gt;It sounds very useful&lt;/a&gt;. So let&amp;#39;s enable it:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Installing OpenWRT on a TL-WR703N router using a USB stick as storage</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2012/09/22/OpenWRT-on-the-TL-WR703N</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2012/09/22/OpenWRT-on-the-TL-WR703N/"/>
    
    <published>2012-09-22T00:00:00+02:00</published>
    <updated>2012-09-22T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">Installing openwrt onto the TL-WR703N using a USB flash drive as the root is not hard. It did however take me a serious amount of research to figure everything out. Here's my try at documenting how to do it.</summary>
    <category term="computer stuff" />
	<content type="html">&lt;h1&gt;The situation&lt;/h1&gt;

&lt;p&gt;I have actually been working with the TL-WR703N for a while. I got I2C
hardware control to work, and it has been serving mjpeg-streamer
images from a webcam happily for a while. There has been some
crashing, however, and when I got a better webcam (Logitech C920) as a
gift, the crashing is now 100% once the camera is put to work. So,
let&amp;#39;s try an upgrade to the latest release of openwrt, and take the
chance to document the steps along the way. &lt;/p&gt;

&lt;p&gt;YMMV, of course. This &lt;em&gt;is&lt;/em&gt; Linux, after all.&lt;/p&gt;

&lt;p&gt;Note that I am installing from an existing install. So, some settings
are taken from the older install. I am trying to document settings
where possible, but it could be that I am missing something. The
router specific pages of the OpenWRT wiki clearly document how to
install the first time, and how to make a USB filesystem.&lt;/p&gt;

&lt;h1&gt;Mirroring the openwrt folders&lt;/h1&gt;

&lt;p&gt;Although not strictly required, I like to mirror the openwrt downloads
folder. This keeps all files compatible, as the trunk files get
changed nearly every day and I do not have 100% faith in my ability to
manage all the possible version conflicts (did I ever say I hate Linux
for all the version conflicts?). This is not very polite, so don&amp;#39;t do
it often.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt; wget -mk -w 20 http://downloads.openwrt.org/snapshots/trunk/ar71xx/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I am on OS X, and perform above &lt;code&gt;wget&lt;/code&gt; in the
/Library/WebServer/Documents folder. This allows the OS X web server
(enable it first) to serve the files, so that I can &lt;code&gt;opkg update&lt;/code&gt; and
&lt;code&gt;opkg install&lt;/code&gt; locally: &lt;strong&gt;nice to have&lt;/strong&gt;.&lt;/p&gt;

&lt;h1&gt;Flashing the new version&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: I did end up running into issues on this install. You may
  want to scroll down to &amp;#39;fixing space issues&amp;#39; to get my updates from
  there first.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;wget http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;md5sums
    wget http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-sysupgrade.bin
    md5sum -c md5sums&lt;/p&gt;

&lt;p&gt;This should report that (n-1) out of n files failed (so 1 passed) :-)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;sysupgrade -v
/tmp/openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-sysupgrade.bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And hold your breath...&lt;/p&gt;

&lt;p&gt;According to
&lt;a href=&quot;http://wiki.openwrt.org/doc/howto/generic.sysupgrade&quot;&gt;the wiki&lt;/a&gt;, the
files in the libraries folder will still be loaded. Scary...&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:/tmp# ls /lib/modules/3.3.8/
aes_generic.ko          iptable_nat.ko          ppp_generic.ko
arc4.ko                 iptable_raw.ko          pppoe.ko
ath.ko                  jbd2.ko                 pppox.ko
ath79_wdt.ko            leds-gpio.ko            scsi_mod.ko
ath9k.ko                ledtrig-default-on.ko   sd_mod.ko
ath9k_common.ko         ledtrig-netdev.ko       sg.ko
ath9k_hw.ko             ledtrig-timer.ko        slhc.ko
cfg80211.ko             ledtrig-usbdev.ko       usb-common.ko
compat.ko               mac80211.ko             usb-storage.ko
crc-ccitt.ko            mbcache.ko              usbcore.ko
crc16.ko                nf_conntrack.ko         x_tables.ko
crypto_algapi.ko        nf_conntrack_ftp.ko     xt_CT.ko
ehci-hcd.ko             nf_conntrack_ipv4.ko    xt_NOTRACK.ko
ext4.ko                 nf_conntrack_irc.ko     xt_TCPMSS.ko
gpio-button-hotplug.ko  nf_defrag_ipv4.ko       xt_comment.ko
ip_tables.ko            nf_nat.ko               xt_conntrack.ko
ipt_LOG.ko              nf_nat_ftp.ko           xt_limit.ko
ipt_MASQUERADE.ko       nf_nat_irc.ko           xt_mac.ko
ipt_REJECT.ko           nls_base.ko             xt_multiport.ko
iptable_filter.ko       ohci-hcd.ko             xt_state.ko
iptable_mangle.ko       ppp_async.ko            xt_tcpudp.ko
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It did actually auto-reboot and it is the newest kernel. Nice! Now I
need to figure out how to update all the programs and kernel modules.&lt;/p&gt;

&lt;p&gt;It actually seems that my user space packages are gone (for example,
e2fsck). How about kernel modules?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:~# ls /lib/modules/3.3.8/
aes_generic.ko          iptable_nat.ko          ppp_generic.ko
arc4.ko                 iptable_raw.ko          pppoe.ko
ath.ko                  leds-gpio.ko            pppox.ko
ath79_wdt.ko            ledtrig-default-on.ko   slhc.ko
ath9k.ko                ledtrig-netdev.ko       usb-common.ko
ath9k_common.ko         ledtrig-timer.ko        usbcore.ko
ath9k_hw.ko             ledtrig-usbdev.ko       x_tables.ko
cfg80211.ko             mac80211.ko             xt_CT.ko
compat.ko               nf_conntrack.ko         xt_NOTRACK.ko
crc-ccitt.ko            nf_conntrack_ftp.ko     xt_TCPMSS.ko
crypto_algapi.ko        nf_conntrack_ipv4.ko    xt_comment.ko
ehci-hcd.ko             nf_conntrack_irc.ko     xt_conntrack.ko
gpio-button-hotplug.ko  nf_defrag_ipv4.ko       xt_limit.ko
ip_tables.ko            nf_nat.ko               xt_mac.ko
ipt_LOG.ko              nf_nat_ftp.ko           xt_multiport.ko
ipt_MASQUERADE.ko       nf_nat_irc.ko           xt_state.ko
ipt_REJECT.ko           nls_base.ko             xt_tcpudp.ko
iptable_filter.ko       ohci-hcd.ko
iptable_mangle.ko       ppp_async.ko
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also &lt;code&gt;/usr/lib/&lt;/code&gt; seems to be ok:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:~# ls /usr/lib/
iptables             libip4tc.so.0.0.0    libnl-tiny.so        libxtables.so.5.0.0
libip4tc.so          libjson.so.0         libxtables.so        opkg
libip4tc.so.0        libjson.so.0.0.1     libxtables.so.5      pppd
root@OpenWrt:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Installing required stuff for USB &amp;amp; cleaning up&lt;/h1&gt;

&lt;p&gt;Edit opkg.conf to send it to the mirrored packages:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;#src/gz kippy http://10.0.0.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages
src/gz kippy http://192.168.1.102/downloads.openwrt.org-r32130/snapshots/trunk/ar71xx/pack
#src/gz attitude_adjustment http://downloads.openwrt.org/snapshots/trunk/ar71xx/packages
dest root /
dest ram /tmp
lists_dir ext /var/opkg-lists
option overlay_root /overlay
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These are my settings (note, I have 2 different IP ranges depending on
weither I&amp;#39;m hard-wiring the router to my laptop, or going through
WiFi). &lt;strong&gt;Wrong address for the link&lt;/strong&gt;: This should have been without
the revision number. &lt;/p&gt;

&lt;p&gt;Then:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;opkg update
opkg install kmod-usb-storage block-mount swap-utils kmod-fs-ext4 kmod-scsi-generic

root@OpenWrt:~# opkg install kernel kmod-usb-storage block-mount swap-utils kmod-fs-ext4 k
mod-scsi-generic
Package kernel (3.3.8-1-5566392ba3947228e76b8c9283f833d0) installed in root is up to date.
Installing kmod-usb-storage (3.3.8-1) to root...
Downloading http://192.168.1.102/downloads.openwrt.org-r32130/snapshots/trunk/ar71xx/packages/kmod-usb-storage_3.3.8-1_ar71xx.ipk.
Package block-mount (0.2.0-8) installed in root is up to date.
Package swap-utils (2.21.1-1) installed in root is up to date.
Installing kmod-fs-ext4 (3.3.8-1) to root...
Downloading http://192.168.1.102/downloads.openwrt.org-r32130/snapshots/trunk/ar71xx/packages/kmod-fs-ext4_3.3.8-1_ar71xx.ipk.
Installing kmod-scsi-generic (3.3.8-1) to root...
Downloading http://192.168.1.102/downloads.openwrt.org-r32130/snapshots/trunk/ar71xx/packages/kmod-scsi-generic_3.3.8-1_ar71xx.ipk.
Collected errors:
 * satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-usb-storage:
 *  kernel (= 3.3.8-1-ce90e6b3a0d7ebfa8f36ba3494997207) *   kernel (= 3.3.8-1-ce90e6b3a0d7ebfa8f36ba3494997207) * 
 * opkg_install_cmd: Cannot install package kmod-usb-storage.
 * satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-fs-ext4:
 *  kernel (= 3.3.8-1-ce90e6b3a0d7ebfa8f36ba3494997207) *   kernel (= 3.3.8-1-ce90e6b3a0d7ebfa8f36ba3494997207) * 
 * opkg_install_cmd: Cannot install package kmod-fs-ext4.
 * satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-scsi-generic:
 *  kernel (= 3.3.8-1-ce90e6b3a0d7ebfa8f36ba3494997207) * 
 * opkg_install_cmd: Cannot install package kmod-scsi-generic.
root@OpenWrt:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apparently the kernel has updated during my mirroring? Rats... 
Nope, I had the incorrect folder set in my opkg.conf, so it was
fetching old package data. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:~# wget http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/pac
kages/kernel_3.3.8-1-5566392ba3947228e76b8c9283f833d0_ar71xx.ipk
Connecting to 192.168.1.102 (192.168.1.102:80)
kernel_3.3.8-1-55663 100% |*****************************************|   714   0:00:00 ETA
root@OpenWrt:~# opkg install ./kernel_3.3.8-1-5566392ba3947228e76b8c9283f833d0_ar71xx.ipk 
Installing kernel (3.3.8-1-5566392ba3947228e76b8c9283f833d0) to root...
Configuring kernel.
root@OpenWrt:~# opkg install ./kmod-scsi-core_3.3.8-1_ar71xx.ipk 
Installing kmod-scsi-core (3.3.8-1) to root...
Configuring kmod-scsi-core.
root@OpenWrt:~# opkg install kmod-scsi-generic
Installing kmod-scsi-generic (3.3.8-1) to root...
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-scsi-generic_3.3.8-1_ar71xx.ipk.
Collected errors:
 * satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-scsi-generic:
 *  kernel (= 3.3.8-1-ce90e6b3a0d7ebfa8f36ba3494997207) * 
 * opkg_install_cmd: Cannot install package kmod-scsi-generic.
root@OpenWrt:~# opkg download kmod-scsi-generic
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-scsi-generic_3.3.8-1_ar71xx.ipk.
Downloaded kmod-scsi-generic as ./kmod-scsi-generic_3.3.8-1_ar71xx.ipk.
root@OpenWrt:~# opkg install ./kmod-scsi-generic_3.3.8-1_ar71xx.ipk 
Installing kmod-scsi-generic (3.3.8-1) to root...
Configuring kmod-scsi-generic.
root@OpenWrt:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What&amp;#39;s wrong with opkg? It can download, and it can install. But not
together??&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;oot@OpenWrt:~# opkg install kmod-usb-storage block-mount swap-utils kmod-fs-ext4 kmod-scs
i-generic
Installing kmod-usb-storage (3.3.8-1) to root...
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-usb-storage_3.3.8-1_ar71xx.ipk.
Package block-mount (0.2.0-9) installed in root is up to date.
Package swap-utils (2.21.2-1) installed in root is up to date.
Installing kmod-fs-ext4 (3.3.8-1) to root...
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-fs-ext4_3.3.8-1_ar71xx.ipk.
Package kmod-scsi-generic (3.3.8-1) installed in root is up to date.
Collected errors:
 * satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-usb-storage:
 *  kernel (= 3.3.8-1-ce90e6b3a0d7ebfa8f36ba3494997207) * 
 * opkg_install_cmd: Cannot install package kmod-usb-storage.
 * satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-fs-ext4:
 *  kernel (= 3.3.8-1-ce90e6b3a0d7ebfa8f36ba3494997207) * 
 * opkg_install_cmd: Cannot install package kmod-fs-ext4.
root@OpenWrt:~# opkg download kmod-usb-storage
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-usb-storage_3.3.8-1_ar71xx.ipk.
Downloaded kmod-usb-storage as ./kmod-usb-storage_3.3.8-1_ar71xx.ipk.
root@OpenWrt:~# opkg install ./kmod-usb-storage_3.3.8-1_ar71xx.ipk 
Installing kmod-usb-storage (3.3.8-1) to root...
Configuring kmod-usb-storage.
root@OpenWrt:~# opkg install kmod-usb-storage block-mount swap-utils kmod-fs-ext4 kmod-scs
i-generic
Package kmod-usb-storage (3.3.8-1) installed in root is up to date.
Package block-mount (0.2.0-9) installed in root is up to date.
Package swap-utils (2.21.2-1) installed in root is up to date.
Installing kmod-fs-ext4 (3.3.8-1) to root...
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-fs-ext4_3.3.8-1_ar71xx.ipk.
Package kmod-scsi-generic (3.3.8-1) installed in root is up to date.
Collected errors:
 * satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-fs-ext4:
 *  kernel (= 3.3.8-1-ce90e6b3a0d7ebfa8f36ba3494997207) * 
 * opkg_install_cmd: Cannot install package kmod-fs-ext4.
root@OpenWrt:~# opkg download kmod-fs-ext4
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-fs-ext4_3.3.8-1_ar71xx.ipk.
Downloaded kmod-fs-ext4 as ./kmod-fs-ext4_3.3.8-1_ar71xx.ipk.
root@OpenWrt:~# opkg install ./kmod-fs-ext4_3.3.8-1_ar71xx.ipk 
Installing kmod-fs-ext4 (3.3.8-1) to root...
Installing kmod-lib-crc16 (3.3.8-1) to root...
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-lib-crc16_3.3.8-1_ar71xx.ipk.
Configuring kmod-lib-crc16.
Configuring kmod-fs-ext4.
root@OpenWrt:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally...&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:~# opkg list-upgradable
libblkid - 2.21.1-1 - 2.21.2-1
libuuid - 2.21.1-1 - 2.21.2-1
blkid - 2.21.1-1 - 2.21.2-1
root@OpenWrt:~# opkg install libblkid libuuid blkid
Upgrading libblkid on root from 2.21.1-1 to 2.21.2-1...
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/libblkid_2.21.2-1_ar71xx.ipk.
Upgrading libuuid on root from 2.21.1-1 to 2.21.2-1...
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/libuuid_2.21.2-1_ar71xx.ipk.
Upgrading blkid on root from 2.21.1-1 to 2.21.2-1...
Downloading http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/blkid_2.21.2-1_ar71xx.ipk.
Configuring libuuid.
Configuring libblkid.
Configuring blkid.
root@OpenWrt:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some updates&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Plugin flash drive. Is recognized as /dev/sdb1. Will this change?
Reboot again with disk plugged in (but first check fstab and disable
partitions).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:~# mount
rootfs on / type rootfs (rw)
/dev/root on /rom type squashfs (ro,relatime)
proc on /proc type proc (rw,noatime)
sysfs on /sys type sysfs (rw,noatime)
tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noatime,size=14580k)
tmpfs on /dev type tmpfs (rw,noatime,size=512k,mode=755)
devpts on /dev/pts type devpts (rw,noatime,mode=600)
/dev/mtdblock3 on /overlay type jffs2 (rw,noatime)
overlayfs:/overlay on / type overlayfs (rw,relatime,lowerdir=/,upperdir=/overlay)
debugfs on /sys/kernel/debug type debugfs (rw,relatime)
none on /proc/bus/usb type usbfs (rw,relatime)
root@OpenWrt:~# mkdir /mnt/flash
root@OpenWrt:~# mount -t ext4 /dev/sd
sda   sda1  sda2  sdb
root@OpenWrt:~# mount -t ext4 /dev/sda2 /mnt/flash
mount: mounting /dev/sda2 on /mnt/flash failed: Invalid argument
root@OpenWrt:~# mount -t ext4 /dev/sda2 /mnt/flash
mount: mounting /dev/sda2 on /mnt/flash failed: Invalid argument
root@OpenWrt:~# mount /dev/sda2 /mnt/flash
mount: mounting /dev/sda2 on /mnt/flash failed: Invalid argument
root@OpenWrt:~# vi /etc/config/fstab

config global automount
        option from_fstab 1
        option anon_mount 1

config global autoswap
        option from_fstab 1
        option anon_swap 0

config mount
        option target   /overlay
        option device   /dev/sda1
        option fstype   ext4
        option options  rw,sync
        option enabled  0
        option enabled_fsck 0

config swap
        option device   /dev/sda2
        option enabled  0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:~# mount /dev/sda1 /mnt/flash
root@OpenWrt:~# mkdir /mnt/flash

rm -Rf /mnt/flash/*
root@OpenWrt:~# tar -C /overlay -cvf - . | tar -C /mnt/flash -xf -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then edit /etc/config/fstab&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;config global automount
        option from_fstab 1
        option anon_mount 1

config global autoswap
        option from_fstab 1
        option anon_swap 0

config mount
        option target   /overlay
        option device   /dev/sda1
        option fstype   ext4
        option options  rw,sync
        option enabled  1
        option enabled_fsck 1

config swap
        option device   /dev/sda2
        option enabled  0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;opkg install e2fsprogs&lt;/p&gt;

&lt;p&gt;device full... Hrmpf again&lt;/p&gt;

&lt;h1&gt;Fixing space issue&lt;/h1&gt;

&lt;p&gt;Any time you play around and overwrite a file in flash, it wastes
memory. This probably caused the out of memory issue here.&lt;/p&gt;

&lt;p&gt;Redid everything, but no futzing, and sysupgrade -n -v instead of only
-v
Because of reset, telnet 192.168.1.1, passwd
^D, ssh root@192.168.1.1
I needed to delete the root@192.168.1.1 entry from ~/.ssh/known_hosts&lt;/p&gt;

&lt;p&gt;/etc/opkg.conf:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;#src/gz attitude_adjustment http://downloads.openwrt.org/snapshots/trunk/ar71xx/packages
src/gz kippy http://192.168.1.102/downloads.openwrt.org/snapshots/trunk/ar71xx/packages
dest root /  
dest ram /tmp                
lists_dir ext /var/opkg-lists
option overlay_root /overlay
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;root@OpenWrt:~# free&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;total         used         free       shared      buffers
Mem:         29156        18208        10948            0         1348
-/+ buffers:              16860        12296
Swap:            0            0            0
root@OpenWrt:~# df
Filesystem           1K-blocks      Used Available Use% Mounted on
rootfs                    1344       208      1136  15% /
/dev/root                 1536      1536         0 100% /rom
tmpfs                    14580      1860     12720  13% /tmp
tmpfs                      512         0       512   0% /dev
root                     14576        28     14548   0% /tmp/root
overlayfs:/tmp/root      14576        28     14548   0% /tmp/root
/dev/mtdblock3            1344       208      1136  15% /overlay
overlayfs:/overlay        1344       208      1136  15% /
root@OpenWrt:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;opkg now works properly also and nothing is upgradeable&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;opkg install e2fsprogs

root@OpenWrt:~# free &amp;amp;&amp;amp; df
             total         used         free       shared      buffers
Mem:         29156        21740         7416            0         1492
-/+ buffers:              20248         8908
Swap:            0            0            0
Filesystem           1K-blocks      Used Available Use% Mounted on
rootfs                    1344      1132       212  84% /
/dev/root                 1536      1536         0 100% /rom
tmpfs                    14580      1860     12720  13% /tmp
tmpfs                      512         0       512   0% /dev
root                     14576        28     14548   0% /tmp/root
overlayfs:/tmp/root      14576        28     14548   0% /tmp/root
/dev/mtdblock3            1344      1132       212  84% /overlay
overlayfs:/overlay        1344      1132       212  84% /
/dev/sdb1               465960     24496    418072   6% /mnt/sdb1
root@OpenWrt:~# 


root@OpenWrt:~# mount
rootfs on / type rootfs (rw)
/dev/root on /rom type squashfs (ro,relatime)
proc on /proc type proc (rw,noatime)
sysfs on /sys type sysfs (rw,noatime)
tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noatime,size=14580k)
tmpfs on /dev type tmpfs (rw,noatime,size=512k,mode=755)
devpts on /dev/pts type devpts (rw,noatime,mode=600)
root on /tmp/root type tmpfs (rw,noatime,mode=755)
overlayfs:/tmp/root on /tmp/root type overlayfs (ro,noatime,lowerdir=/,upperdir=/tmp/root)
debugfs on /sys/kernel/debug type debugfs (rw,relatime)
none on /proc/bus/usb type usbfs (rw,relatime)
/dev/mtdblock3 on /overlay type jffs2 (rw,noatime)
overlayfs:/overlay on / type overlayfs (rw,noatime,lowerdir=/,upperdir=/overlay)
/dev/sdb1 on /mnt/sdb1 type ext4 (rw,relatime,user_xattr,barrier=1,data=ordered)
root@OpenWrt:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So the flash drive was automounted on /mnt/sdb1 (will be /sda1 when
plugged in at boot).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:~# ls /mnt/sdb2/
root@OpenWrt:~# ls /mnt/sdb1/
etc   lib   mnt   root  sbin  usr
root@OpenWrt:~# rm -Rf /mnt/sdb1/*
root@OpenWrt:~# ls /mnt/sdb1/
root@OpenWrt:~# 

tar -C /overlay -cvf - . | tar -C /mnt/sdb1 -xf -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bach to /etc/config/fstab:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;config global automount
        option from_fstab 1
        option anon_mount 1

config global autoswap
        option from_fstab 1
        option anon_swap 0

config mount
        option target   /overlay                         
        option device   /dev/sda1
        option fstype   ext4   
        option options  rw,sync
        option enabled  1    
        option enabled_fsck 1

config swap                      
        option device   /dev/sda2
        option enabled  1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;reboot&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:~# df &amp;amp;&amp;amp; free
Filesystem           1K-blocks      Used Available Use% Mounted on
rootfs                  465960     24944    417624   6% /
/dev/root                 1536      1536         0 100% /rom
tmpfs                    14580        64     14516   0% /tmp
tmpfs                      512         0       512   0% /dev
/dev/sda1               465960     24944    417624   6% /overlay
overlayfs:/overlay      465960     24944    417624   6% /
             total         used         free       shared      buffers
Mem:         29156        17988        11168            0         1644
-/+ buffers:              16344        12812
Swap:            0            0            0
root@OpenWrt:~# mount
rootfs on / type rootfs (rw)
/dev/root on /rom type squashfs (ro,relatime)
proc on /proc type proc (rw,noatime)
sysfs on /sys type sysfs (rw,noatime)
tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noatime,size=14580k)
tmpfs on /dev type tmpfs (rw,noatime,size=512k,mode=755)
devpts on /dev/pts type devpts (rw,noatime,mode=600)
/dev/sda1 on /overlay type ext4 (rw,sync,relatime,user_xattr,barrier=1,data=ordered)
overlayfs:/overlay on / type overlayfs (rw,relatime,lowerdir=/,upperdir=/overlay)
debugfs on /sys/kernel/debug type debugfs (rw,relatime)
none on /proc/bus/usb type usbfs (rw,relatime)
root@OpenWrt:~# 

root@OpenWrt:~# swapon /dev/sda2
root@OpenWrt:~# free
             total         used         free       shared      buffers
Mem:         29156        18208        10948            0         1664
-/+ buffers:              16544        12612
Swap:        32764            0        32764
root@OpenWrt:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And again back to /etc/config/fstab:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;config global automount
        option from_fstab 1
        option anon_mount 1

config global autoswap
        option from_fstab 1
        option anon_swap 0

config mount
        option target   /home
        option device   /dev/sda1
        option fstype   ext4
        option options  rw,sync
        option enabled  1
        option enabled_fsck 1

config swap
        option device   /dev/sda2
        option enabled  1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;reboot to test&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;root@OpenWrt:~# mount &amp;amp;&amp;amp; free &amp;amp;&amp;amp; df
rootfs on / type rootfs (rw)
/dev/root on /rom type squashfs (ro,relatime)
proc on /proc type proc (rw,noatime)
sysfs on /sys type sysfs (rw,noatime)
tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noatime,size=14580k)
tmpfs on /dev type tmpfs (rw,noatime,size=512k,mode=755)
devpts on /dev/pts type devpts (rw,noatime,mode=600)
/dev/sda1 on /overlay type ext4 (rw,sync,relatime,user_xattr,barrier=1,data=ordered)
overlayfs:/overlay on / type overlayfs (rw,relatime,lowerdir=/,upperdir=/overlay)
debugfs on /sys/kernel/debug type debugfs (rw,relatime)
none on /proc/bus/usb type usbfs (rw,relatime)
             total         used         free       shared      buffers
Mem:         29156        17724        11432            0         1968
-/+ buffers:              15756        13400
Swap:        32764            0        32764
Filesystem           1K-blocks      Used Available Use% Mounted on
rootfs                  465960     24944    417624   6% /
/dev/root                 1536      1536         0 100% /rom
tmpfs                    14580        64     14516   0% /tmp
tmpfs                      512         0       512   0% /dev
/dev/sda1               465960     24944    417624   6% /overlay
overlayfs:/overlay      465960     24944    417624   6% /
root@OpenWrt:~# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now to install &lt;code&gt;luci&lt;/code&gt; and &lt;code&gt;mjpeg-streamer&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;opkg update
opkg install luci
/etc/init.d/uhttpd enable
/etc/init.d/uhttpd start

opkg install htop bash

opkg install mjpg-streamer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and edit /etc/config/mjpg-streamer&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;config mjpg-streamer core
        option enabled          &quot;1&quot;
        option device           &quot;/dev/video0&quot;
        option resolution       &quot;640x480&quot;
        option fps              &quot;10&quot;
        option www              &quot;/www/webcam0&quot;
        option port             &quot;8080&quot;

root@OpenWrt:~# /etc/init.d/mjpg-streamer start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;oops, forgot the kermel modules... &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;opkg install kmod-video-uvc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let&amp;#39;s check if it has been recognized:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;[  719.130000] usbcore: registered new interface driver uvcvideo
[  719.130000] USB Video Class driver (1.1.1)
[  726.590000] usb 1-1.3: USB disconnect, device number 5
[  729.390000] usb 1-1.3: new high-speed USB device number 6 using ehci-platform
[  729.520000] uvcvideo: Found UVC 1.00 device HD Pro Webcam C920 (046d:082d)
[  729.540000] input: HD Pro Webcam C920 as /devices/platform/ehci-platform/usb1/1-1/1-1.3/1-1.3:1.0/input/input1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Does it work?&lt;/h1&gt;

&lt;p&gt;Hotplug already works and automatically starts the mjpeg-streamer
daemon as soon as the webcam is plugged in, and kills it when it&amp;#39;s
plugged out. Nice!&lt;/p&gt;

&lt;h2&gt;Memory limitations&lt;/h2&gt;

&lt;p&gt;When switching to higher resolutions, and/or higher framerates, I
noticed lots of crashes of the router. This is a memory issue, where
mjpg-streamer starts using too much. It needs several buffers of the
size of the video frame to work, which at HDTV resolutions means lots
of megabytes. I will try to upgrade the memory of the router to solve
this, or at least alleviate it. &lt;/p&gt;

&lt;p&gt;This is the memory status after all this (at 640x480):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/computer%20stuff/2012/09/22/OpenWRT-on-the-TL-WR703N/mjpegstreamer-640-480.jpg&quot; alt=&quot;The screenshot of htop with the settings from this log&quot; title=&quot;The screenshot of htop with the settings from this log&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Garbled images&lt;/h2&gt;

&lt;p&gt;The C920 camera seems to give garbled images when the frame rate is
too high. This is probably due to some bug in the kernel drivers (or
is it by design?) combined with the limited memory transfer bandwidth
of these Atheros processors. It could be that the client reads from a
buffer while another part of the buffer is still being written. Just
guessing here: I&amp;#39;m no kernel expert. &lt;/p&gt;

&lt;p&gt;Anyway, keeping the framerate low enough, everything is ok. I should
not expect the world from a router that uses roughly 0.5W!&lt;/p&gt;

&lt;h2&gt;Instabilities&lt;/h2&gt;

&lt;p&gt;It seems that using the USB filesystem does cut down on the stability
of the overall system. I have incorporated a cron job to reboot every
24h, and &lt;code&gt;monit&lt;/code&gt; to check the stability of various processes. That
way, things seem doable. In the future I will try and fit everything
into the flash to eliminate these instabilities. Janis Alnis
&lt;a href=&quot;https://www.dropbox.com/sh/ity5ho0jq3vwq4l/bsE-hyPe0-&quot;&gt;keeps a file with his notes online, that describes his experinces of doing this successfully&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Web skeleton&lt;/h2&gt;

&lt;p&gt;The standard mjpeg-streamer package for openwrt has no www files
included, in order to reduce the storage requirements. I do want it
there, because it&amp;#39;s a quick way of getting some useful testing
done. So, I downloaded the full mjpeg-streamer distribution from &lt;a href=&quot;http://sourceforge.net/projects/mjpg-streamer/&quot;&gt;their
website&lt;/a&gt; and copied the www folder into &lt;code&gt;/www/webcam0/&lt;/code&gt;.&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Adding an I2C interface to the TL-WR703N</title>
    <id>tag:pragti.ch,2013-02-09:/kippycam/2012/08/15/Adding-an-I2C-interface-to-the-TL-WR703N</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/kippycam/2012/08/15/Adding-an-I2C-interface-to-the-TL-WR703N/"/>
    
    <published>2012-08-15T00:00:00+02:00</published>
    <updated>2012-08-15T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">I had the wireless router to show the webcam images for the 'kippycam'. Some discussions in the openwrt forms showed, that there are several spare GPIO pins on its chip. So: there is a chance to do all kinds of hardware control. This rekindled some childhood enthusiasm for electronics that I had nearly forgotten. So, how did I add hardware control (specifically, the I2C interface) to the TL-WR703N?</summary>
    <category term="kippycam" />
	<content type="html">&lt;h1&gt;The goal&lt;/h1&gt;

&lt;p&gt;To enable the creative use of the wireless router in the garden to do
all kinds of fun stuff. My first insane ideas are things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Closing the chicken coop door (determined by remote control or
automatically)&lt;/li&gt;
&lt;li&gt;Making a feed dispenser, so that the chickens may be tempted to be
close to the camera&lt;/li&gt;
&lt;li&gt;Counting and logging the egg laying productivity (and the chickens&amp;#39;
noise?)&lt;/li&gt;
&lt;li&gt;Monitoring the solar panels and battery charge status.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;#39;s just the start...&lt;/p&gt;

&lt;h1&gt;Approach&lt;/h1&gt;

&lt;p&gt;Because of the &lt;a href=&quot;https://forum.openwrt.org/viewtopic.php?id=36471&quot;&gt;promising reports for at least 2 GPIO pins in the
TL-WR703N&lt;/a&gt;, I was looking for an interface that supports powerful
actions, with the minimum of wires. In the end, I chose I2C because a
cursory web search showed all kinds of cool chips that support it, and
because of the low complexity. SPI needs addressing, that I was not
sure I coud deliver, and 1-wire is only suited to a very limited array
of devices. Serial communication could have worked, but this is not
very robust against jitter (and we will be bit-banging) and demands a
lot from each client. So: I2C it is!&lt;/p&gt;

&lt;h1&gt;Adding I2C interface&lt;/h1&gt;

&lt;p&gt;All the background information that I used came from the kind people
that generated their knowledge
&lt;a href=&quot;https://forum.openwrt.org/viewtopic.php?id=36471&quot;&gt;to the Openwrt forums&lt;/a&gt;. I pretty much copied that
what they did before. A few points are critical:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The parts are really really small. Take a lot of care, use a very
sharp soldering iron and use magnification.&lt;/li&gt;
&lt;li&gt;The traces in the router are easily peeled off. Do not apply
vertical forces and make sure to releive any forces on the wires. I
epoxied all wires to the PCB after soldering to prevent them from
pulling the PCB traces.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These were the steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Remove R15 and R17.&lt;/li&gt;
&lt;li&gt;Solder very thin wires to each pad (the side facing away from the
USB connector)&lt;/li&gt;
&lt;li&gt;Solder a +3.3V wire to the square field marked &lt;code&gt;LED2 +&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Solder a GND wire to the micro-USB connector (reset button side)&lt;/li&gt;
&lt;li&gt;Solder a +5V wire to the other side of the micro-USB connector
(Ethernet side)&lt;/li&gt;
&lt;li&gt;Glue the wires to the PCB using 2-component epoxy adhesive.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;...although the micro usb wires may be the other way around...&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/kippycam/2012/08/15/Adding-an-I2C-interface-to-the-TL-WR703N/I2C-soldered.jpg&quot; alt=&quot;The finished product&quot; title=&quot;After completing the soldering&quot;&gt;
&lt;img src=&quot;/kippycam/2012/08/15/Adding-an-I2C-interface-to-the-TL-WR703N/I2C-soldered-detail.jpg&quot; alt=&quot;The finished product, some more detail&quot; title=&quot;Some more detail&quot;&gt;&lt;/p&gt;

&lt;p&gt;Then I cut a hole into the top of the housing and glued a 2x3 boxed
header onto the lid of the router. I chose the following pin-out in an
attempt to keep the signal wires apart:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;5V&lt;/li&gt;
&lt;li&gt;NC&lt;/li&gt;
&lt;li&gt;SCL (GPIO7, 3.3V)&lt;/li&gt;
&lt;li&gt;GND&lt;/li&gt;
&lt;li&gt;SDA (GPIO 29, 3.3V)&lt;/li&gt;
&lt;li&gt;3.3V&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That&amp;#39;s how it looks:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/kippycam/2012/08/15/Adding-an-I2C-interface-to-the-TL-WR703N/I2C-done.jpg&quot; alt=&quot;The finished product, outside&quot; title=&quot;The end product, closed and tidy.&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No Pull-ups yet, so these need to be put on the client side, or
  built in later.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;Installing on Openwrt&lt;/h1&gt;

&lt;p&gt;The OpenWRT wiki has loads of (some more outdated than other) stuff on
I2C
&lt;a href=&quot;http://wiki.openwrt.org/doku.php?id=oldwiki:port.i2c&quot;&gt;at this link&lt;/a&gt;. Let&amp;#39;s
start with the basics:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&amp;gt; opkg update
&amp;gt; opkg install i2c-tools
&amp;gt;opkg install kmod-i2c-gpio-custom

Installing kmod-i2c-gpio-custom (3.3.8-2) to root...
Downloading http://192.168.1.100/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-i2c-gpio-custom_3.3.8-2_ar71xx.ipk.
Collected errors:
 * satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-i2c-gpio-custom:
 *  kmod-i2c-algo-bit * 
 * opkg_install_cmd: Cannot install package kmod-i2c-gpio-custom.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So we are missing kmod-i2c-algo-bit. A quick check on the
&lt;a href=&quot;http://downloads.openwrt.org/snapshots/trunk/ar71xx/packages/&quot;&gt;downloads page for trunk&lt;/a&gt; shows it missing there,
too. But I really need it. &lt;/p&gt;

&lt;p&gt;*&lt;em&gt;So now what? *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Left over from
&lt;a href=&quot;../technology/Compiling%20gstreamer%20for%20C920%20webcam.html&quot;&gt;my experiments with compiling OpenWRT on OS X&lt;/a&gt; was a local compile directory that actually
successfully compiles. So I went in there and did a &lt;code&gt;make
menuconfig&lt;/code&gt;. When I installed all the I2C stuff, it automatically
enables the &lt;code&gt;i2c-gpio-custom&lt;/code&gt; module. And after &lt;code&gt;make&lt;/code&gt;, it also
compiles the matchin object file. But no &lt;code&gt;.ipk&lt;/code&gt; to match. Where did it
go...?&lt;/p&gt;

&lt;p&gt;After a bit of searching it was
found. &lt;code&gt;trunk/build_dir/linux-ar71xx_generic/linux-3.3.8/modules.builtin&lt;/code&gt;
tells exactly where it went: into the kernel (built-in, not as a
module). Here&amp;#39;s a list of all the stuff that was builtin:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;kernel/fs/jffs2/jffs2.ko
kernel/fs/overlayfs/overlayfs.ko
kernel/fs/squashfs/squashfs.ko
kernel/crypto/crypto.ko
kernel/block/deadline-iosched.ko
kernel/drivers/base/firmware_class.ko
kernel/drivers/gpio/gpio-nxp-74hc153.ko
kernel/drivers/gpio/gpio-pcf857x.ko
kernel/drivers/i2c/i2c-core.ko
kernel/drivers/i2c/algos/i2c-algo-bit.ko
kernel/drivers/i2c/busses/i2c-gpio.ko
kernel/drivers/mtd/mtd.ko
kernel/drivers/mtd/redboot.ko
kernel/drivers/mtd/myloader.ko
kernel/drivers/mtd/tplinkpart.ko
kernel/drivers/mtd/wrt160nl_part.ko
kernel/drivers/mtd/mtdchar.ko
kernel/drivers/mtd/mtd_blkdevs.ko
kernel/drivers/mtd/mtdblock.ko
kernel/drivers/mtd/chips/chipreg.ko
kernel/drivers/mtd/chips/cfi_probe.ko
kernel/drivers/mtd/chips/cfi_util.ko
kernel/drivers/mtd/chips/cfi_cmdset_0002.ko
kernel/drivers/mtd/chips/gen_probe.ko
kernel/drivers/mtd/chips/jedec_probe.ko
kernel/drivers/mtd/devices/m25p80.ko
kernel/drivers/mtd/maps/map_funcs.ko
kernel/drivers/mtd/maps/physmap.ko
kernel/drivers/net/mii.ko
kernel/drivers/net/dsa/mv88e6060.ko
kernel/drivers/net/ethernet/atheros/ag71xx/ag71xx.ko
kernel/drivers/net/phy/libphy.ko
kernel/drivers/net/phy/swconfig.ko
kernel/drivers/net/phy/marvell.ko
kernel/drivers/net/phy/ip17xx.ko
kernel/drivers/net/phy/ar8216.ko
kernel/drivers/net/phy/rtl8306.ko
kernel/drivers/net/phy/rtl8366_smi.ko
kernel/drivers/net/phy/rtl8366s.ko
kernel/drivers/net/phy/rtl8366rb.ko
kernel/drivers/net/phy/rtl8367.ko
kernel/drivers/net/phy/micrel.ko
kernel/drivers/spi/spi-ap83.ko
kernel/drivers/spi/spi-ath79.ko
kernel/drivers/spi/spi-bitbang.ko
kernel/drivers/tty/serial/serial_core.ko
kernel/drivers/tty/serial/8250/8250.ko
kernel/net/802/p8022.ko
kernel/net/802/psnap.ko
kernel/net/802/stp.ko
kernel/net/8021q/vlan_core.ko
kernel/net/8021q/8021q.ko
kernel/net/bridge/bridge.ko
kernel/net/dsa/dsa_core.ko
kernel/net/ipv4/tcp_cubic.ko
kernel/net/llc/llc.ko
kernel/net/packet/af_packet.ko
kernel/net/unix/unix.ko
kernel/lib/bitrev.ko
kernel/lib/crc32.ko
kernel/lib/lzma/lzma_compress.ko
kernel/lib/lzma/lzma_decompress.ko
kernel/lib/xz/xz_dec.ko
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, something is wonky with Openwrt. Either one of the two:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The kernel config automatically configures the module as a builtin
and ignores my wish to have it as a module. &lt;/li&gt;
&lt;li&gt;The package &lt;code&gt;kmod-i2c-gpio-custom&lt;/code&gt; incorrectly forces the
dependency to &lt;code&gt;kmod-i2c-algo-bit&lt;/code&gt;, while indeed it is builtin by
default.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I do not understand the kernel enough to know who&amp;#39;s wrong, but the
solution is clear:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&amp;gt; opkg install --force-depends kmod-i2c-gpio-custom
Installing kmod-i2c-gpio-custom (3.3.8-2) to root...
Downloading http://192.168.1.100/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-i2c-gpio-custom_3.3.8-2_ar71xx.ipk.
Installing kmod-i2c-gpio (3.3.8-1) to root...
Downloading http://192.168.1.100/downloads.openwrt.org/snapshots/trunk/ar71xx/packages/kmod-i2c-gpio_3.3.8-1_ar71xx.ipk.
Configuring kmod-i2c-gpio.
Configuring kmod-i2c-gpio-custom.
Collected errors:
* satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-i2c-gpio-custom:
*   kmod-i2c-algo-bit * 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But does it work?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&amp;gt; insmod i2c-gpio-custom bus0=0,29,7
&amp;gt; dmesg |tail

[  711.120000] Custom GPIO-based I2C driver version 0.1.1
[  711.120000] i2c-gpio i2c-gpio.0: using pins 29 (SDA) and 7 (SCL)
[  712.920000] br-lan: port 1(eth0) entered forwarding state
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Success?&lt;/p&gt;

&lt;h1&gt;The first IO test&lt;/h1&gt;

&lt;p&gt;I made a breadboard with the &lt;code&gt;PCF8574&lt;/code&gt; IO expander from Texas
Instruments (also available from NXP, but TI gives free samples). It
takes the 3.3V power from the router, pulls up and has 8 LEDs from
3.3V to the pins of the &lt;code&gt;PCF8574&lt;/code&gt;. Maybe I&amp;#39;ll write an update about
the breadboard later, but it&amp;#39;s mainly just the datasheet
application. Later I switched to 5V and added level shifting MOSFETs,
again, maybe some day I&amp;#39;ll write it up.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# i2cdetect 0
WARNING! This program can confuse your I2C bus, cause data loss and worse!
I will probe file /dev/i2c-0.
I will probe address range 0x03-0x77.
Continue? [Y/n] 
      0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
00:          -- -- -- -- -- -- -- -- -- -- -- -- -- 
10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
20: 20 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
70: -- -- -- -- -- -- -- -- 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It works!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# echo pcf8574 0x20 &amp;gt; /sys/bus/i2c/devices/i2c-0/new_device
# dmesg | tail
[  153.590000] Custom GPIO-based I2C driver version 0.1.1
[  153.590000] i2c-gpio i2c-gpio.0: using pins 29 (SDA) and 7 (SCL)
[  651.600000] gpiochip_add: registered GPIOs 56 to 63 on device: pcf8574
[  651.600000] pcf857x 0-0020: 
[  651.610000] i2c i2c-0: new_device: Instantiated device pcf8574 at 0x20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sounds good: we have a chip at the correct address, and 8 new GPIOs
were created (numberd 56 through 63). Careful though: the &lt;code&gt;PCF8574&lt;/code&gt;
does not get detected in any way. So only the &lt;code&gt;i2cdetect&lt;/code&gt; output
really confirms that something is there on the bus and responding. So let&amp;#39;s test the GPIOs for
confirmation.&lt;/p&gt;

&lt;h1&gt;Actually blinking LEDs&lt;/h1&gt;

&lt;p&gt;Let&amp;#39;s try to set one of the pins manually:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# cd /sys/class/gpio&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# echo 57 &amp;gt; export&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# echo out&amp;gt;gpio57/direction&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# echo 0 &amp;gt; gpio57/value &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Upon setting &lt;code&gt;output&lt;/code&gt;, the LED lights up. Success!&lt;/p&gt;

&lt;p&gt;The output chip is open drain-ish (quasi bidirectional) and could
probably have
been connected with the LEDs oriented to light with the pin set to
&lt;code&gt;1&lt;/code&gt;. The chip then controls the current through an internal current
source. I did it the other way around, with the cathode connected to
the output pin. So now, we are able to control each output pin
individually from userspacs, just by writing to the filesystem. Much,
much more than I had ever dreamed. Even shell scripts can work with
the outputs and inputs. Wicked.&lt;/p&gt;

&lt;p&gt;The next step: blinking. I was lazy and googled for a bash script that
blinks. And found it &lt;a href=&quot;http://netduinoplusfun.wordpress.com/2012/07/16/blink-a-light-with-raspberry-pi/&quot;&gt;on this blog&lt;/a&gt;. Tweaked it a little
bit, which was easy because it&amp;#39;s so well written. I added an argument
for the GPIO pin to use, to try all 8 pins. This is what I ended up with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# blink_arg.bash -- must run as root!&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#       &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Blink GPIO pin on and off&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;LEDPIN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-57&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;OFF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nv&quot;&gt;ON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;c&quot;&gt;# Make sure we have root access&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$EUID&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ne&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You must be root to run this. Try 'sudo &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;exit
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Clean up procedure--turn off the LED, unexport the GPIO, and exit&lt;/span&gt;
cleanup&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;PIN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$OFF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/class/gpio/gpio&lt;span class=&quot;nv&quot;&gt;$PIN&lt;/span&gt;/value      &lt;span class=&quot;c&quot;&gt;# turn off&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PIN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/class/gpio/unexport
        &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;Interrupted.
        &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Set up--select the pin and direction. Catch Control-C SIGHUP SIGKILL&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$LEDPIN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/class/gpio/export
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;out &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/class/gpio/gpio&lt;span class=&quot;nv&quot;&gt;$LEDPIN&lt;/span&gt;/direction
&lt;span class=&quot;nb&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cleanup $LEDPIN'&lt;/span&gt; 1 2 15

&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/class/gpio/gpio&lt;span class=&quot;nv&quot;&gt;$LEDPIN&lt;/span&gt;/value    &lt;span class=&quot;c&quot;&gt;# turn on&lt;/span&gt;
        sleep 1
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$OFF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/class/gpio/gpio&lt;span class=&quot;nv&quot;&gt;$LEDPIN&lt;/span&gt;/value   &lt;span class=&quot;c&quot;&gt;# turn off&lt;/span&gt;
        sleep 1
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it works as expected. So now for some fun (we did not get all this
linux power for nothing!). &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt; # ./blink_arg.bash 56&amp;amp;
 # ./blink_arg.bash 57&amp;amp;
 # ./blink_arg.bash 58&amp;amp;
 # # ... etcetera ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So using all the cool multitasking goodness to do nothing special at
all. How does that look?&lt;/p&gt;

&lt;iframe width=&quot;640&quot; height=&quot;480&quot; src=&quot;http://www.youtube.com/embed/eJ91tw86p7I&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;h1&gt;Input&lt;/h1&gt;

&lt;p&gt;The next step is to use the input function. That will be the next update.&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Keeping Openwrt online using DHCP</title>
    <id>tag:pragti.ch,2013-02-09:/kippycam/2012/07/13/Openwrt-connection-checking</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/kippycam/2012/07/13/Openwrt-connection-checking/"/>
    
    <published>2012-07-13T00:00:00+02:00</published>
    <updated>2012-07-13T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">When Openwrt loses its connection, it does not very gracefully reconnect when using proto dhcp. This is how I solved this</summary>
    <category term="kippycam" />
	<content type="html">&lt;p&gt;I noticed, when
&lt;a href=&quot;network-layout.html&quot;&gt;installing the WiFi network bridge to the garden shed&lt;/a&gt;,
that the DHCP client does not reconnect when the connection has been
lost. It just sits there (don&amp;#39;t know when it would reconnect, maybe
when the lease expires?) unconnected. For my purpose, that&amp;#39;s not very
satisfying, as I need the connection to be robust. &lt;/p&gt;

&lt;p&gt;Since I had worked with &lt;code&gt;monit&lt;/code&gt; before, I figured this would be a
great way to periodically check the state of the connection and
re-enable it when it has dropped out. At a later date, &lt;code&gt;monit&lt;/code&gt; could
also turn out to be helpful in making sure that all other services on
the router remain healthy. &lt;/p&gt;

&lt;h1&gt;Installing &amp;amp; configuring&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;opkg update

# I am getting the packages from my local copy of the trunk, just
to have it all be consistent. That probably is only critical for
the kernel modules packages, but let's do it for sake of
simplicity

opkg install monit

vi /etc/monitrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I added some sensible settings from the template that is in
&lt;code&gt;/etc/monitrc&lt;/code&gt;, mainly to start as a daemon, put the work files in
&lt;code&gt;/tmp&lt;/code&gt; and set the frequency of the checks. And the check for a
connection:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;check host kiprouter with address 10.0.0.4                                     
    if failed icmp type echo count 3 with timeout 3 seconds then
    exec &quot;/etc/init.d/network restart&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then to enable and start monit:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;/etc/init.d/monit enable
/etc/init.d/monit start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Testing results later...&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Some notes on using Aquamacs</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2012/07/13/Aquamacs-Notes</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2012/07/13/Aquamacs-Notes/"/>
    
    <published>2012-07-13T00:00:00+02:00</published>
    <updated>2012-07-13T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">Because I keep forgetting all the little details, I am writing them down.</summary>
    <category term="computer stuff" />
	<content type="html">&lt;p&gt;Aquamacs is a great text editor for OS X. It does, however, have its
idiosyncrises. So, here I am keeping notes on what worked for me.&lt;/p&gt;

&lt;h1&gt;Documentation&lt;/h1&gt;

&lt;p&gt;First of all, Google is your friend. But there is also some
&lt;a href=&quot;http://www.emacswiki.org/emacs/AquamacsFAQ&quot;&gt;good documentation on the EmacsWiki site&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;Configuration file&lt;/h1&gt;

&lt;p&gt;The Aquamacs does not use the standard &lt;code&gt;.emacs&lt;/code&gt; locations. Instead,
the stuff is hidden in the library. For details, check
&lt;a href=&quot;http://www.emacswiki.org/emacs/AquamacsFAQ&quot;&gt;the Aquamacs FAQ&lt;/a&gt;. I tend to edit the files in
&lt;code&gt;~/Library/Preferences/Aquamacs Emacs/&lt;/code&gt; by hand, especially &lt;code&gt;customizations.el&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To be honest, this exasperates me so much, that I have learned to use
the &amp;#39;customization&amp;#39; tool.&lt;/p&gt;

&lt;h1&gt;Emacsclient&lt;/h1&gt;

&lt;p&gt;In using Aquamacs, I wanted to start using it as the default
editor. Some research was needed.&lt;/p&gt;

&lt;h2&gt;Setup&lt;/h2&gt;

&lt;p&gt;I edited &lt;code&gt;.bash_profile&lt;/code&gt; and added the following`;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# editor setup&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/Applications/Aquamacs.app/Contents/MacOS/bin/emacsclient'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ALTERNATE_EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;vi
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$EDITOR&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Probably I should research how to use ALTERNATE_EDITOR to startup
Aquamacs, but I want to be sure that I am actually on a windowing
station to do that -- too lazy at the moment. Maybe later. As it is
now, Aquamacs will be used when it&amp;#39;s running (like when I&amp;#39;m working on
this website), and vi will be used otherwise. &lt;/p&gt;

&lt;p&gt;It also sets up a shorthand editing alias &lt;code&gt;e&lt;/code&gt; for my convenience.&lt;/p&gt;

&lt;p&gt;To get the server to automatically load, I used the customization
interface (Aquamacs -&amp;gt; Preferences, Interfacing to external
utilities, Server) to enable &amp;#39;Server Mode&amp;#39;. That way, any time
Aquamacs starts up, it will be listening.&lt;/p&gt;

&lt;h2&gt;Using&lt;/h2&gt;

&lt;p&gt;Ending an editing session that was started this way, goes as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;C-x #
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Many people rebind this key to something like &lt;code&gt;C-c c&lt;/code&gt; to better match
other applications like GNUS or VCS. Maybe I will too, some day.&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Using Nanoc to fill Github Pages</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2012/07/04/Nanoc-Github-Pages</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2012/07/04/Nanoc-Github-Pages/"/>
    
    <published>2012-07-04T00:00:00+02:00</published>
    <updated>2012-07-04T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">Learning to use git to update GitHub Pages -- a free web server.</summary>
    <category term="computer stuff" />
	<content type="html">&lt;p&gt;Started out with an already-existing nanoc folder.&lt;/p&gt;

&lt;p&gt;I Installed git for mac using the standard installer supplied on
git-scm.com (version 1.7.11.1) and created an account on github.&lt;/p&gt;

&lt;p&gt;Created a repository called &lt;username&gt;.github.com&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://schmurfy.github.com/2011/05/06/create_your_github_user_page_with_nanoc.html&quot;&gt;Followed (approximately) this link&lt;/a&gt;
although I made a few changes.&lt;/p&gt;

&lt;p&gt;First of all, I already had a checkin, so could skip the first code
box. I did rename the &lt;code&gt;master&lt;/code&gt; branch to &lt;code&gt;source&lt;/code&gt; and add a second remote:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;git branch -m master source
git remote add pages https://github.com/&amp;lt;user&amp;gt;/&amp;lt;user&amp;gt;.github.com.git
git push -u pages source
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output sounds promising:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Counting objects: 102, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (95/95), done.
Writing objects: 100% (102/102), 237.00 KiB, done.
Total 102 (delta 19), reused 0 (delta 0)
To https://github.com/pragtich/pragtich.github.com.git
 * [new branch]      source -&amp;gt; source
Branch source set up to track remote branch source from pages.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;source&lt;/code&gt; branch now holds the entire page source (including
any output).&lt;/p&gt;

&lt;p&gt;Now I followed the cloning instructions quite rigidly (because I do
not really understand them yet).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# fetch a working copy of your repository
  $ git clone https://github.com/&amp;lt;user&amp;gt;/&amp;lt;user&amp;gt;.github.com.git output
  $ cd output
# create the isolated branch
  $ git symbolic-ref HEAD refs/heads/master
  $ rm .git/index
  $ git clean -fdx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then recreate the output files:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;cd ..
nanoc compile
git commit -a
git push pages
cd output/
git add *
git commit
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;git push origin master&lt;/code&gt; part was tricky to figure out to me. It
pushes the output folder&amp;#39;s content to it&amp;#39;s set remote origin (which
came from the &lt;code&gt;clone&lt;/code&gt;, I assume. Adding the &lt;code&gt;master&lt;/code&gt; determines that
the files are going into the &lt;code&gt;master&lt;/code&gt; branch (which is the leading
branch for the GitHub Pages).&lt;/p&gt;

&lt;p&gt;Finally, I did:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt; touch .nojekyll
 git add .nojekyll
 git commit

 vi .gitignore       #add .nojekyll to this file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should put a .nojekyll file into the repository, that will not
get clobbered when I nuke the output/ folder (I hope).&lt;/p&gt;

&lt;p&gt;So now, the workflow is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Update files in the &lt;code&gt;content/&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;Compile and upload to test server (I use a rake file)&lt;/li&gt;
&lt;li&gt;Verify results&lt;/li&gt;
&lt;li&gt;In the source folder: &lt;code&gt;git commit -a; git push pages&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In the output folder: &lt;code&gt;git commit -a; git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;: Add a rakefile to auto-push both the source and the output once
I have a satisfactory build.&lt;/p&gt;

&lt;h1&gt;Pushing using nanoc-git&lt;/h1&gt;

&lt;p&gt;I am playing with nanoc-git. I found it through a Google search. It&amp;#39;s
maker claims it to be alpha-level software. Let&amp;#39;s see. It lives
&lt;a href=&quot;https://github.com/cspicker/nanoc-git&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The script does rebuild the output folder implicitly. So it breaks the
prototyping build thing that I have described above. Maybe I&amp;#39;ll try to
rewrite it to allow some kind of prototyping, or maybe I will stick
with the plan before. I will see. Good thing I&amp;#39;m keeping this blog,
because I tend to forget each syntax before I get to use it again.&lt;/p&gt;

&lt;p&gt;For sake of documentation, I did the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Updated &lt;code&gt;config.yaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# Additions for nanoc-git: http://graysky.org/2008/12/git-branch-auto-tracking/
deploy:
  default:
    dst_remote: pages
    dst_branch: master
    src_branch: source
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Installed nanoc-git:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt; gem install nanoc-git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Edited &lt;code&gt;Rakefile&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;require 'nanoc-git/tasks'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, to execute: `rake deploy:git&amp;#39; should &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clean the nanoc site&lt;/li&gt;
&lt;li&gt;Check out the source (&lt;code&gt;source&lt;/code&gt;) from &lt;code&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Compile the site using &lt;code&gt;nanoc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check out the destination (&lt;code&gt;master&lt;/code&gt;) from &lt;code&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copy all the files from the &lt;code&gt;output/&lt;/code&gt; folder to the root of
&lt;code&gt;master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Commit in &lt;code&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push to the remote &lt;code&gt;master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check the source back out&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A possible workflow could be:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# Edit the file 
git add &amp;lt;file&amp;gt;
git commit 
rake co  #this is my prototyping (sitecopy) rake

# Check: ok?

rake deploy:git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or another option:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# Edit the file 
rake co  #this is my prototyping (sitecopy) rake

# Check: ok?

git add &amp;lt;file&amp;gt;
git commit 

rake deploy:git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Getting a domain name&lt;/h1&gt;

&lt;p&gt;I registered &lt;code&gt;pragti.ch&lt;/code&gt; at &lt;a href=&quot;http://nic.ch&quot;&gt;nic.ch&lt;/a&gt; and organized a
free DNS service to do the DNS hosting. Then, tried to set up the
CNAME following
&lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-domain-with-pages&quot;&gt;the documentation at Github&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;git checkout master
vi CNAME
# just one line: 
# pragti.ch

git add CNAME
git commit
git push pages
git checkout source
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Did not work immediately, but many times DNS can take some time to
update. Let&amp;#39;s wait and see.&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Getting network access in the garden</title>
    <id>tag:pragti.ch,2013-02-09:/kippycam/2012/06/22/Network-layout</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/kippycam/2012/06/22/Network-layout/"/>
    
    <published>2012-06-22T00:00:00+02:00</published>
    <updated>2012-06-22T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">It took quite some work to get a network connection in the garden. How did I manage?</summary>
    <category term="kippycam" />
	<content type="html">&lt;h1&gt;The problem&lt;/h1&gt;

&lt;p&gt;The garden is quite long and goes around a bend. The house has an extension towards the back that blocks most lines of sight between the garden and the main house. Also, the distance from the services entry point and the shed where the chickens live, runs in the tens of meters. Here&amp;#39;s an overview of the situation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/kippycam/2012/06/22/Network-layout/gardenlayout.jpg&quot; alt=&quot;Layout of the garden&quot;&gt;&lt;/p&gt;

&lt;p&gt;The best way would be to dig a pipe through the garden and wire with ethernet. But this would involve digging up 20 meters of paving, and 20 meters of grass. Although it needs to be done some day (to get water and electricity in the garden, for one thing), now is not the time. So --- wireless is the way to go!&lt;/p&gt;

&lt;h1&gt;Layout&lt;/h1&gt;

&lt;p&gt;To get a wifi signal at the shed, the existing infrastructure in the house is insufficient. It only reaches roughly 10 meters into the garden. Too many walls, too many trees and leaves. &lt;/p&gt;

&lt;p&gt;An extra access  point is needed. In the first place I will create a wireless repeater, because this has worked before. Later, I may relocate the repeater to a place where I can reach it with Ethernet: that would be a more elegant solution in the long run.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;: Research &lt;a href=&quot;http://www.rubyinside.com/ruby-graphviz-data-visualization-1477.html&quot;&gt;Railroad&lt;/a&gt; for creating really nice plots.&lt;/p&gt;

&lt;p&gt;The ouline is as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Main Router  ==&amp;gt;    Repeater    ==&amp;gt;     Webcam server
Airport         TL-WR703N           TL-WR703N
DHCP server     relay wlan-wlan         relay wlan-lan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;OpenWRT configuration&lt;/h1&gt;

&lt;h2&gt;Repeater&lt;/h2&gt;

&lt;p&gt;I used the &lt;code&gt;luci&lt;/code&gt; webinterface to configure relaying. Setting this up goes something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;opkg update
opkg install luci luci-proto-relay
# this auto-installs many dependencies, including relayd and uhttpd
/etc/init.d/uhttpd enable
/etc/init.d/uhttpd start
/etc/init.d/relayd enable       # This is required in trunk versions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, &lt;code&gt;luci&lt;/code&gt; should be up and running by sending the browser to the router&amp;#39;s IP address (most likely &lt;code&gt;192.168.1.1&lt;/code&gt;). &lt;/p&gt;

&lt;p&gt;A reasonably clear guide to configuring relaying through &lt;code&gt;luci&lt;/code&gt; is given on &lt;a href=&quot;http://trac.gateworks.com/wiki/relayd&quot;&gt;this page at gateworks.com&lt;/a&gt;. Only trouble is, that this example is for relaying between &lt;code&gt;lan&lt;/code&gt; and &lt;code&gt;wwan&lt;/code&gt;. I started ambitiously, trying to relay to both &lt;code&gt;lan&lt;/code&gt; and a new &lt;code&gt;wifi AP&lt;/code&gt;, but this stranded in the complications of it. Start easy.
Also disable security first. This cost me an afternoon, because &lt;code&gt;psk2&lt;/code&gt; and the &lt;code&gt;auto&lt;/code&gt; cypher setting were not playing nicely with OS X.&lt;/p&gt;

&lt;p&gt;TODO: Add my own nice pictures of how wifi relaying works.&lt;/p&gt;

&lt;p&gt;Another place to check for instructions is &lt;a href=&quot;https://forum.openwrt.org/viewtopic.php?pid=163262#p163262&quot;&gt;In the forums&lt;/a&gt;, but be careful. For one, the &lt;code&gt;trunk&lt;/code&gt; releases need an additional &lt;code&gt;/etc/init.d/relayd enable&lt;/code&gt;. Also, some of the &lt;code&gt;wireless&lt;/code&gt; settings are outdated. The essence is good.&lt;/p&gt;

&lt;p&gt;Something very confusing is the IP address choice for the interface that is not directly connected to the &amp;#39;live&amp;#39; network. So the &amp;#39;access point&amp;#39; network in this case. It gets a static address by definition, but this address is largely ignored. Actually, the relayd passes all traffic from the outside network to the internal network. This includes DHCP requests, which also get passed on and get answered by the Main Router. So in fact all clients on both sides of the relay use IP addresses from the Main Router&amp;#39;s subnet. Setting the IP address of the &amp;#39;inside&amp;#39; network to a different subnet helps in case the &amp;#39;outside&amp;#39; network is unavailable or does not provide DHCP. Then, we need this &amp;#39;inside&amp;#39; subnet in order to gain access to the router.&lt;/p&gt;

&lt;h2&gt;Webcam server&lt;/h2&gt;

&lt;p&gt;The webcam server follows &lt;a href=&quot;http://trac.gateworks.com/wiki/relayd&quot;&gt;the instructions at gateworks.com&lt;/a&gt; mostly literally. I kept the &lt;code&gt;lan&lt;/code&gt; IP at &lt;code&gt;192.168.1.1&lt;/code&gt;, simply because there was no real reason to change it. Relay is overkill here, but I chose it because it allows any potential clients on the &lt;code&gt;LAN&lt;/code&gt; interface (wired clients) to join in the network as if nothing was in between. &lt;/p&gt;

&lt;p&gt;TODO: Add description of mjpg-server in additional page and link here&lt;/p&gt;

&lt;h1&gt;Physical network&lt;/h1&gt;

&lt;p&gt;The wireless repeater helps bridging the distance between the house and the shed, but it does rely on &amp;#39;line of sight&amp;#39;. And even with a clear line of sight (which I do not have, there are tree leaves and a roof partially in the way), the distance is still significant. I took several steps that I intend to document separately:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Convert the TL-WR703N routers to add external antenna connectors.&lt;/li&gt;
&lt;li&gt;Construct &lt;code&gt;cantennas&lt;/code&gt; to have better gain and a more efficient (narrower) beam.&lt;/li&gt;
&lt;li&gt;Place the antennas where there is optimal line of sight&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At present, this is enough to cover my needs with limited bandwidth, but acceptable reliability. After researching a bit, cantennas seem to be over-hyped. Maybe I will build yagi or other high gain antennas at a later date. For now, the cans are working.&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Things to do on this blog</title>
    <id>tag:pragti.ch,2013-02-09:/blogging/2012/06/04/TODO_website</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/blogging/2012/06/04/TODO_website/"/>
    
    <published>2012-06-04T00:00:00+02:00</published>
    <updated>2012-06-04T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">What I still intend to do</summary>
    <category term="blogging" />
	<content type="html">&lt;h1&gt;Some things that I still intend to do with this site&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;ADD A picture of my configuration screens in &lt;code&gt;luci&lt;/code&gt; to the layout
page.&lt;/li&gt;
&lt;li&gt;Add photo of line of sight to network-layout&lt;/li&gt;
&lt;li&gt;Add &amp;quot;title&amp;quot; stuff so that a Markdown image gets a caption (javascript?)&lt;/li&gt;
&lt;li&gt;Devise a more structured way of working with images, flowing them in the text etc.&lt;/li&gt;
&lt;li&gt;Make sure that titles in the title list also get passed through rubypants&lt;/li&gt;
&lt;li&gt;Research
[Railroad](http://www.rubyinside.com/ruby-graphviz-data-visualization-1477.html&lt;/li&gt;
&lt;li&gt;Make images work with a full size image clickable through the thumbnail&lt;/li&gt;
&lt;li&gt;Add an &amp;#39;all categories&amp;#39; button in the nav pane&lt;/li&gt;
&lt;li&gt;make the &amp;#39;about&amp;#39; page&lt;/li&gt;
&lt;li&gt;Switch from categories to tags?&lt;/li&gt;
&lt;li&gt;Add code coloration&lt;/li&gt;
&lt;li&gt;Complete redesign of blog pages &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;DONE&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Make a design that actually numbers &lt;ol&gt; and not &lt;ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">The Kippencam -- starting a new project</title>
    <id>tag:pragti.ch,2013-02-09:/kippycam/2012/06/04/Starting-project-Chicken-Webcam</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/kippycam/2012/06/04/Starting-project-Chicken-Webcam/"/>
    
    <published>2012-06-04T00:00:00+02:00</published>
    <updated>2012-06-04T00:00:00+02:00</updated>
    <summary type="text" xml:lang="en">I am starting a new project: a solar-powered webcam in the chicken coop.</summary>
    <category term="kippycam" />
	<content type="html">&lt;p&gt;I have started a new project: I want to make a webcam in the chicken coop. The poor chickens are out there all day, out of sight of the house. And when we&amp;#39;re away, it would be good to be able to check on them now and then, and make sure that they&amp;#39;re not getting up to any mischief. Wouldn&amp;#39;t it be cool to be able to snap pictures when they&amp;#39;re up to no good (like eating that mouse they found, or jumping over the fence, again....)? And it would be a great step towards all kinds of cool automation projects, starting with automatic door closing at night.&lt;/p&gt;

&lt;h1&gt;Requirements&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;To be self-powered: no running power lines through the garden&lt;/li&gt;
&lt;li&gt;Wireless connection to the house: no running ethernet cables either&lt;/li&gt;
&lt;li&gt;At least one webcam, preferably HDTV quality, preferably extension to 3 cameras to be possible in the future&lt;/li&gt;
&lt;li&gt;Reasonably self-managing and low-maintenance&lt;/li&gt;
&lt;li&gt;Low cost: we&amp;#39;re getting married this year&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Inspiration&lt;/h1&gt;

&lt;p&gt;The main idea for this project came from &amp;quot;&lt;a href=&quot;http://www.instructables.com/id/How-to-set-up-a-solar-powered-webcam-server-using-/&quot;&gt;How to set up a solar powered webcam server using NanosG20 running Debian&lt;/a&gt;&amp;quot; by Janisalnis on instructables. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;janisalnis.jpg&quot; alt=&quot;Picture of Janisalnis&amp;#39; setup&quot; title=&quot;This is how his project looked when he wrote about it&quot;&gt;&lt;/p&gt;

&lt;p&gt;Building from this idea, janisalnis already makes the recommendation that modern routers are &lt;a href=&quot;http://www.instructables.com/id/How-to-set-up-home-data-server-using-OpenWRT-on-Li/&quot;&gt;a much smarter way to go&lt;/a&gt;. And on &lt;a href=&quot;http://barbara320.gotdns.com/&quot;&gt;his homepage&lt;/a&gt; there are many examples of the results of his great projects. There, he links &lt;a href=&quot;http://www.slideshare.net/JanisAlnis/home-automation-12979616&quot;&gt;a presentation that really drew my attention&lt;/a&gt;. He is a really creative guy!&lt;/p&gt;

&lt;p&gt;On one slide, he refers to the TP-LINK WR703N, a small router with less than 1W power consumption, yet quite a powerful CPU and USB 2.0! He already refers to a list of possibilities, like HD webcams, USB audio and Arduino linking. Cool stuff! Shockingly enough, these powerful machines sell on ebay for less than EUR20 !!&lt;/p&gt;

&lt;p&gt;And I have played with OpenWRT before, so this is starting to look like a great thing. The first two TL-WR703N&amp;#39;s have been ordered, cannot wait for them to get here from Hong Kong!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;UPDATE&lt;/em&gt;: I later learned that there is a slightly larger, but largely similar router that can be bought in Europe for a bit more money (but without the long wait): the TL-MR3020. I already had my orders for the smaller one in, but maybe it can be an option for later.&lt;/p&gt;

&lt;h1&gt;Research&lt;/h1&gt;

&lt;h2&gt;Some reading on the TL-WR703N&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.openwrt.org/toh/tp-link/tl-wr703n&quot;&gt;OpenWRT wiki with all kinds of hardware details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.openwrt.org/toh/tp-link/tl-mr3020&quot;&gt;Another wiki page with the related and very similar router MR3020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://forum.openwrt.org/viewtopic.php?id=36471&quot;&gt;A forum discussion that shows how to do I2C with the WR703N&lt;/a&gt;. This means that we can control all kinds of hardware without messy Arduino links. I am definitely going to try this.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.instructables.com/member/janisalnis/&quot;&gt;Loads of instructables presentations by janisalnis that include a plethora of step-by-step guides on everything from hardware to software.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://embeddedtimes.blogspot.nl/2011/09/tp-link-tl-wr703n-tiny-linux-capable.html&quot;&gt;A great introduction into the fun of the TL-WR703N by the Embedded Times.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.openwrt.org/doku.php?id=oldwiki:port.i2c&quot;&gt;A slightly messy piece in the OpenWRT wiki on I2C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://laakkonen.dy.fi/projektit/tl-wr703n/&quot;&gt;A Finnish site that mentions the external antenna: This is something I will need to do.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://forum.openwrt.org/viewtopic.php?id=34580&quot;&gt;Forum entry that details the external antenna method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.villagetelco.org/index.php?title=Building_a_Serial_Port_for_TL-WR703N&quot;&gt;If I manage to screw up the firmware, we may need this to recover (serial port)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;On &lt;a href=&quot;http://www.hackup.net&quot;&gt;hackup.net&lt;/a&gt;, there are some nice articles about using OpenWRT for controlling hardware. &lt;a href=&quot;http://www.hackup.net/2012/01/openwrt-and-scripting-languages-part-1/#more-358&quot;&gt;This article details one way to use a USB stick for storage, and installing Ruby (without serial support)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://forum.openwrt.org/viewtopic.php?pid=156142&quot;&gt;A great writeup on adding extra internal usb ports&lt;/a&gt;. I will probably just go with an external hub. Why squeeze everything into a small space for this project?&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.acemonstertoys.org/Tp-link_router&quot;&gt;A detailed list of stuff on hardware control using the WR703N, including Arduino connection and cross-compiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://forum.openwrt.org/viewtopic.php?pid=125196#p125196&quot;&gt;A writeup of getting usb audio to work (cool)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Wireless connection&lt;/h2&gt;

&lt;p&gt;The chicken coop is located in the garden behind my house. This could be ~50 meters from the current location of the main wireless router. Also, the signal needs to pass through several brick walls. All in all, there is no chance that we will have a connection using any simple method. Indeed, even my MacBook (which has a great antenna) does not get a connection in most of the garden. &lt;/p&gt;

&lt;p&gt;So how to get this to work? I will probably add a cantenna to the WR703 in the garden to get good reception and either move the main wireless router to a better location (the attic?) or set up a repeater somewhere in the house, possibly also with a cantenna. This will take some experimentation.&lt;/p&gt;

&lt;h2&gt;Solar powering&lt;/h2&gt;

&lt;p&gt;For the start of the project, I will go with direct solar powering from the panels. No storage. Once the principle has been proven, I will be charging a battery. I did some research on Open Source solar charge controller projects with the idea of making my own charger. While there are some very nice designs around, I really prefer to go with a proven technology. I want the development of the camera to be the fun part, not the screwing with a battery charger. Ultimate efficiency is also not a parameter for me, so I will probably go with either one of these 2 options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Steca SOLSUM 6.6F (&lt;a href=&quot;http://www.conrad.nl/ce/nl/product/110678?WT.mc_id=mpfeed&amp;insert=8T&quot;&gt;from Conrad probably&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://steca.de/data/media/26/2628_231x315_SolsumF_72dpi_315px.jpg&quot; alt=&quot;SOLSUM&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;MorningStar SHS6 (&lt;a href=&quot;http://hobby.marktplaats.nl/elektronica-componenten/544588648-steca-en-morningstar-laadregelaars-accu-zonnepaneel.html?return=eJwljEsKwzAMRO8SSJb%2BNF0UB1PSm5jYxSb%2BiEihpaV3r0JW8540jDPafJNRExp9vZkOg9uWOEUiMFKuDUIVxW0rQXaOUNQsz4qACPd3tnrwaKn149yPD5%2FOzMT5ScCIT48smhGOq2Io%2FJjrXsKWFtb1xYot417YGh4jlwFgt2ogtLqbfn%2FEGzUB&amp;df=1&amp;fta=eNpFkEluwzAMRe%2BihdcaPVDwFXoFg4rsVKgcC6GcCA1y98pG0e4eOP0HInTwIuiB7fc4PTASswSdBFbiKBpPY97A%2BgA2ZvgOydLiCYRNGbhdE9z2db6Hi%2F16Am2R9tVuFEA2Ke0jbzKN4ringSW8zsyGukqggAV%2FBgnRAlPOaY%2B6LxUUN0NXpOi9QrdU6BwXvS6St9pw1deKM4tCc4CuI0MF7YWY64wY3CCxLX8HJfetMgordOai2v%2BIM7x65C2hpynOt2v%2BPPxkbQzAVizToVwt%2FelcP4JPZj9%2B8cEsAofX%2B%2F0DyKNhYA%3D%3D&amp;fta_ind=12&amp;fs=1&quot;&gt;probably from Sunnyside on Marktplaats&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And realistically, at around EUR 20 a piece, there is not a lot to lose.&lt;/p&gt;

&lt;p&gt;Solar panel prices have dropped a lot recently. The cheap made-in-China panels are dropping close to the EUR 1 per Watt-peak mark at the moment. Of course, I have learned from reading, that the cheap suppliers can be quite optimistic regarding their specified Watt-peak values. So in fact the more expensive panels from &amp;#39;real&amp;#39; manufacturers are supposed to be worth the extra cash. For me, a factor was the availability of reasonably priced small panels on the &lt;a href=&quot;http://www.ebay.de&quot;&gt;Ebay&lt;/a&gt; was good. I purchased 2x 30W panels from &lt;a href=&quot;http://myworld.ebay.de/enjoysolarshop/&quot;&gt;Enjoy Solar in Bremen&lt;/a&gt;, and will see how they perform. &lt;strong&gt;NOTE:&lt;/strong&gt; There seem to be many sellers on ebay that do get very good reviews, but also rack up significant negative comments. Be sure to check the negative comments for a seller before you buy. I nearly fell for a promising-looking seller, which clearly does not take after-sales care as seriously as any (German!) seller should...&lt;/p&gt;

&lt;h2&gt;OpenWRT&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.openwrt.org/doc/howto/extroot&quot;&gt;How to use an external USB stick as root filesystem&lt;/a&gt;. I&amp;#39;m not sure how this could affect flash wear: at the moment I will use a cheap memory stick and just see what happens.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.openwrt.org/doc/howto/usb.storage&quot;&gt;How to enable USB storage, including how to format the partitions for efficiency.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.minipwner.com/index.php/minipwner-build&quot;&gt;A very concise list of instructions to get a WR703N up and going&lt;/a&gt;. Probably not going to use, because it avoids USB stick usage, and why would I?&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.instructables.com/files/orig/F0M/V4MW/H2MYLKL9/F0MV4MWH2MYLKL9.txt&quot;&gt;Janisalnis&amp;#39; short description of installing OpenWRT onto a USB stick: a useful start.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Listing life goals with 43things</title>
    <id>tag:pragti.ch,2013-02-09:/life/2011/11/22/43things</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/life/2011/11/22/43things/"/>
    
    <published>2011-11-22T00:00:00+01:00</published>
    <updated>2011-11-22T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">I started a list of things I want to do some time on 43things.org.</summary>
    <category term="life" />
	<content type="html">&lt;p&gt;I have been having a nagging sense that I have way too many dreams and am not doing much about most of them. It&amp;#39;s always been taking the next step, and following the clear path forward. Most of this is because of my &amp;#39;in the box&amp;#39; thinking, I think. I did not grow up with the talent of seeing big opportunities, of beleiving that the imaginable &lt;em&gt;can actually be realized&lt;/em&gt;. At times this has been a great burden on things, but recognition has led to increasing understanding, and it&amp;#39;s getting easier and easier to actually &lt;em&gt;follow the dream&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Strangely, this does not at all go for travelling. When I travel, I can be ambitious, set the weirdest goals and totally accept whatever comes along. The same goes for photography, which to me feels a lot similar to travelling. It is imperative to set a goal, a challenging one, but it is just as imperative to not allow the goal to blind you for the path you are on. Only with a goal, do you escape your preconceptions, patterns and habits.&lt;/p&gt;

&lt;p&gt;In recent years, I have done several larger and more compact things, which were clear examples of this thinking. Things that I did, knowing that they would turn out to deliver, if not the expected result, &lt;em&gt;an experience&lt;/em&gt;. It strikes me, that many of these actions included what you could describe as &lt;em&gt;&amp;#39;dreams&amp;#39;&lt;/em&gt; or &lt;em&gt;&amp;#39;ambitions&amp;#39;&lt;/em&gt;. So, this is an attempt to formalize this thinking, and to visualize my opprtunities for the future. Let&amp;#39;s write a &lt;em&gt;bucket list&lt;/em&gt;, a list of dreams, ambitions and goals!&lt;/p&gt;

&lt;h1&gt;What I did recently:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;   &lt;strong&gt;Learned gliding&lt;/strong&gt;
 Although I am not doing it any more, this was a huge learning experience. Not only did I manage to solo a glider during an entire summer, I met a completely new group of people, and got confronted with &lt;em&gt;learning&lt;/em&gt;. Not studying (I&amp;#39;m good at that trick), bot actual &lt;em&gt;learning&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;   &lt;strong&gt;Took a month of vacation to tour the Southwest and hike the national parks&lt;/strong&gt;
 A great adventure and an unexpectedly deep impression. Surpises around every corner.&lt;/li&gt;
&lt;li&gt;   &lt;strong&gt;Proposed to Arnolda&lt;/strong&gt;
 We&amp;#39;re getting married. At the moment I think it probably still scares us both, but it&amp;#39;s going to be a brilliant thing.&lt;/li&gt;
&lt;li&gt;   &lt;strong&gt;Flew a hot air balloon&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;So how to go forward? &lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;I opened &lt;a href=&quot;http://www.43things.com/person/pragtich&quot;&gt;an account on 43things.com.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I started adding some goals off the top of my head.&lt;/li&gt;
&lt;li&gt;I intend to update the blog with my experiences, new additions, completions and steps made towards my goals.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;What is &lt;a href=&quot;http://www.43things.com/person/pragtich&quot;&gt;in the list now?&lt;/a&gt;:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;   &lt;strong&gt;Complete my Design for Six Sigma black belt projects&lt;/strong&gt;
 This was a course I started at my previous employer. I was super enthousiastic, and really think this stuff is made for me. A great combination of practical and theoretical, of project management and project execution. But it does require submitting 2 project to get the certificate. And that&amp;#39;s where I&amp;#39;m stuck. I guess the professor was right when he said that it&amp;#39;s not as easy as it looks. So I will start afresh, coose a very simple task, and &lt;em&gt;just do it&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;   &lt;strong&gt;Build an aeroplane&lt;/strong&gt;
 Something I have been wanting to do ever since I saw &lt;a href=&quot;http://en.wikipedia.org/wiki/A_Plane_Is_Born&quot;&gt;A plane is born&lt;/a&gt;. Actually &lt;em&gt;making&lt;/em&gt; something is rarer than you would think, for engineers. I would have to learn great deals, and find a good mentor. Don&amp;#39;t even think getting a licence first would be necessary. This would be a real adventure. &lt;/li&gt;
&lt;li&gt;   &lt;strong&gt;Fly around the USA/Australia in a light plane.&lt;/strong&gt; Flying is just great. This goal would involve getting a license, becoming proficient at flying, and probably finding a guided tour of some sort. What could be better than exploring a great continent in a fast vehicle, and getting the great scenes that you do from the air?!&lt;/li&gt;
&lt;li&gt;   &lt;strong&gt;Marry Arnolda&lt;/strong&gt;. Mentioned last, but definitely not least. After more than 12 years, it felt like our relationship was missing the final detail. To be able to really call her &amp;#39;wife&amp;#39; (I have been doing this for years regardsless) and have her carry my name. This will be an adventure in itself, and will require both of us to face old fears and reservations. &lt;em&gt;Adventure!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Analysis&lt;/h1&gt;

&lt;p&gt;... is what i do. &lt;/p&gt;

&lt;p&gt;I see one overriding theme in this short list: &lt;em&gt;adventure&lt;/em&gt;. I like adventure, apparently.&lt;/p&gt;

&lt;p&gt;Other themes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A lot of ambition, big goals&lt;/li&gt;
&lt;li&gt;The desire to learn&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Midlife_crisis&quot;&gt;Midlife crisis?&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Easy new page creating using Emacs and Template.el</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2011/11/14/Installing-Emacs-Template-mode</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2011/11/14/Installing-Emacs-Template-mode/"/>
    
    <published>2011-11-14T00:00:00+01:00</published>
    <updated>2011-11-14T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">How I installed Template.el to help make blogging quick in Emacs</summary>
    <category term="computer stuff" />
	<content type="html">&lt;p&gt;installing Emacs Template mode in Aquamacs. Based on &lt;a href=&quot;http://emacs-template.sourceforge.net/details.html&quot;&gt;This web site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Downloaded and put the template.el file into &lt;code&gt;~/.xemacs/lisp&lt;/code&gt;. 
Visit the file and &lt;code&gt;M-x byte-compile-file RET template.el RET&lt;/code&gt;. Loads of errors.&lt;/p&gt;

&lt;p&gt;Put into Emacs settings (Library in Aquamacs):
    (require &amp;#39;template)
    (template-initialize)
    M-C-x&lt;/p&gt;

&lt;p&gt;Copied example templates to ~/.templates.&lt;/p&gt;

&lt;p&gt;Restarted Emacs&lt;/p&gt;

&lt;p&gt;Read the &lt;a href=&quot;http://emacs-template.sourceforge.net/details.html&quot;&gt;manual&lt;/a&gt;.
* &lt;code&gt;C-x t&lt;/code&gt; Creates a file with template
* &lt;code&gt;template-new-file&lt;/code&gt; Should do the same
* I want to try and disable it from &lt;code&gt;C-x C-f&lt;/code&gt; -- that would only be confusing&lt;/p&gt;

&lt;p&gt;Created the following empty markdown article with Nanoc header in &lt;code&gt;~/.templates&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;gd&quot;&gt;--- 
&lt;/span&gt;title: (&amp;gt;&amp;gt;&amp;gt;TITLE&amp;lt;&amp;lt;&amp;lt;)
kind: article
category: Computer stuff
created_at: (&amp;gt;&amp;gt;&amp;gt;DATE&amp;lt;&amp;lt;&amp;lt;)
summary: (&amp;gt;&amp;gt;&amp;gt;SUMMARY&amp;lt;&amp;lt;&amp;lt;)
---

(&amp;gt;&amp;gt;&amp;gt;POINT&amp;lt;&amp;lt;&amp;lt;)

&amp;gt;&amp;gt;&amp;gt;TEMPLATE-DEFINITION-SECTION&amp;lt;&amp;lt;&amp;lt;
(&quot;SUMMARY&quot; &quot;Summary?&quot; &quot;&quot; &quot;&quot; &quot;-- no summary --&quot;)
(&quot;TITLE&quot; &quot;Title?&quot; &quot;&quot; &quot;&quot; &quot;&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, to submit a now article, I can do: &lt;code&gt;C-x t&lt;/code&gt;, type the new folder and filename with the &lt;code&gt;.md&lt;/code&gt; extension, and type &lt;code&gt;RET&lt;/code&gt;. Further filling in the prompts for template (&lt;code&gt;RET&lt;/code&gt;), summary and title is a breeze, and then I have the cursor placed at exactly the right point for starting to blog.&lt;/p&gt;

&lt;p&gt;Great stuff.&lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Making a personal website using Nanoc</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2011/11/12/Nanoc</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2011/11/12/Nanoc/"/>
    
    <published>2011-11-12T00:00:00+01:00</published>
    <updated>2011-11-12T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">How I used Nanoc to create this personal webpage</summary>
    <category term="computer stuff" />
	<content type="html">&lt;p&gt;I have previously played around with different systems for creating a personal webpage. Working in HTML quickly frustrated me because it is in essence illegible. Also, it made no sense to me to have to repeat all the layout and navigation stuff in each page.&lt;/p&gt;

&lt;p&gt;My first real attempt at a personal page already had the design that is close to what is here now. I made it using Apache Cocoon, and the abstraction level really appealed to me. However, in practical use it turned out to be way too heavy on the server. The once-supercoputer server I was using (a SGI Indigo) could not handle the java. I ended up using a web spider to convert everything into static pages, not really a satisfactory approach.&lt;/p&gt;

&lt;p&gt;Now, years later, i am playing with Nanoc. It is one of a range of static webpage generation tools that have sprouted since the Ruby programming language has become popular. &lt;/p&gt;

&lt;p&gt;Nanoc is reasonably well documented (the objects very well, the use a bit less detailed), and there is a community site that includes several examples of web sites which are a great help. To set up my site, I used two main sources: The Nanoc website and the Schof.org site by Mark Schofield. Especially the practical example of schof.org has been a great help.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/computer%20stuff/2011/11/12/Nanoc/nanoc-ss.jpg&quot; alt=&quot;Screenshot of nanoc running&quot;&gt;&lt;/p&gt;

&lt;h1&gt;An RSS feed for the site&lt;/h1&gt;

&lt;p&gt;Of course, a blog should have a RSS feed. Even though you have no readers yet... One never knows when it will be useful.&lt;/p&gt;

&lt;p&gt;So, I am trying to get the Blogging helper RSS stuff to work. The &lt;a href=&quot;http://nanoc.stoneship.org/docs/api/3.1/Nanoc3/Helpers/Blogging.html#atom_feed-instance_method&quot;&gt;documentation&lt;/a&gt; shows that we need to set up some stuff. I did just that, although I must say I really dislike the &lt;code&gt;excerpt&lt;/code&gt; tag, because of its American English brutality. I will try to come up with a way to use &lt;code&gt;summary&lt;/code&gt; instead.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;base_url: 'http://http://members.home.nl/pragtich'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Created a &lt;code&gt;content/atom.xml&lt;/code&gt; with the contents:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt; &amp;lt;%%= atom_feed %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And created &lt;code&gt;content/atom.yaml&lt;/code&gt; with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;title: Joris Pragt's blog feed
author_name: Joris Pragt
author_uri: http://members.home.nl/pragtich
is_hidden: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Edited &lt;code&gt;Rules&lt;/code&gt; to add:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;compile '/atom/' do
  filter :erb
end

route '/atom/' do
  '/atom.xml'
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maruku threw some errors. Switched to Kramdown and all is well. &lt;/p&gt;

&lt;p&gt;I was confused for a while, because no orange icon was showing. Turns out that Firefox has removed the RSS feed icon from the toolbar. You can add it with &lt;code&gt;customize&lt;/code&gt;, but even then it is oly black and gray. Not such a clear message anymore, compared to the old way. &lt;/p&gt;
</content>
  </entry>


  <entry>
    <title type="text" xml:lang="en">Installing sitecopy on OS X Snow Leopard and using it with Nanoc</title>
    <id>tag:pragti.ch,2013-02-09:/computer%20stuff/2011/11/12/Installing-sitecopy-on-OS-X</id>
    <link rel="alternate" type="text/html" href="https://www.pragti.ch/computer%20stuff/2011/11/12/Installing-sitecopy-on-OS-X/"/>
    
    <published>2011-11-12T00:00:00+01:00</published>
    <updated>2011-11-12T00:00:00+01:00</updated>
    <summary type="text" xml:lang="en">I use Sitecopy to upload my Nanoc site to the server. This is how I managed to do it.</summary>
    <category term="computer stuff" />
	<content type="html">&lt;p&gt;In order to sync my nanoc site to my provider&amp;#39;s server, I have installed sitecopy. Sitecopy requires one of the ports packages. I chose fink, but Darwinports should also work I guess.&lt;/p&gt;

&lt;p&gt;First, I downloaded the Xcode and iOS developer software from Apple (registration required as an Apple developer, but free). This installed without issue.&lt;/p&gt;

&lt;p&gt;Then, I followed the instructions on the &lt;a href=&quot;http://www.finkproject.org/download/srcdist.php&quot;&gt;Fink website&lt;/a&gt;. The instructions are quite clear I think. I tried to fill in as many local servers as possible while running &lt;code&gt;./bootstrap&lt;/code&gt;. It would be a shame to transfer everything over the Atlantic cables, right?&lt;/p&gt;

&lt;p&gt;What doe surprise me, is that many packages were installed, which I actually already have, many already built into OS X. One that jumped out to me, was python. I can only assume that this is done in order to have all libraries in control of Fink. I just really hope having some programs around twice, does not cause conflicts. fingers crossed...&lt;/p&gt;

&lt;h1&gt;Now for the real stuff&lt;/h1&gt;

&lt;p&gt;Once sitecopy was running, it actually ran very quickly. I copied an example rakefile &lt;a href=&quot;http://www.remerson.plus.com/articles/nanoc-rake&quot;&gt;From here&lt;/a&gt; and followed the directory structure suggested by it:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;nanoc/
  site/
    content/
    layouts/
    sitecopy/
      sitecopyrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, that is: no dotfiles, all files visible to the filesystem. Of course, this is not the default for sitecopy, so we specify the sitecopy rc file locations in the rakefile.&lt;/p&gt;

&lt;p&gt;Then, I created the sitecopyrc as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;site my.pretty.name
server ftp.server.url
remote /
local ~/nanoc/pragtich/trunk/output/
username myFTPusernae
password thepassword
protocol ftp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where the folder after &lt;code&gt;local&lt;/code&gt; is the nanoc &lt;code&gt;output&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;I then used the initialization from the example rakefile:
    sitecopy -r sitecopy/sitecopyrc -p sitecopy -i my.pretty.name
And crated a &amp;#39;compile and upload&amp;#39; rake addition to the &lt;code&gt;Rakefile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;desc &quot;compile and upload.&quot;
task :co do
  system 'nanoc co &amp;amp;&amp;amp; sitecopy  -r sitecopy/sitecopyrc -p sitecopy -u my.pretty.name'
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So now, each time I edit something in my page, I only have to go...&lt;/p&gt;

&lt;p&gt;rake co&lt;/p&gt;

&lt;p&gt;...and the entire thing is recompiled and synchronized to the server. &lt;/p&gt;

&lt;h1&gt;Mission accomplished!&lt;/h1&gt;

&lt;h1&gt;Update&lt;/h1&gt;

&lt;p&gt;When I started using &lt;code&gt;git&lt;/code&gt;, I needed to add a line to the
&lt;code&gt;sitecopyrc&lt;/code&gt;. I added several of the disturbing dotfiles (which my
server was not allowing me to upload) to the &lt;code&gt;exclude&lt;/code&gt; list. The
&lt;code&gt;sitecopy/sitecopyrc&lt;/code&gt; now looks something like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;site my.pretty.name
server ftp.server.url
remote /
local ~/nanoc/pragtich/output/
username myFTPusernae
password thepassword
protocol ftp
exclude .DS_Store
exclude .git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This saves a lot of error messages, which eventually led to a failing sitecopy.&lt;/p&gt;
</content>
  </entry>

</feed>

