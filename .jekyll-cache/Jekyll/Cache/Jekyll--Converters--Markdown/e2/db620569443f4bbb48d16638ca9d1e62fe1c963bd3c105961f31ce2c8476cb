I"<<p>In order to sync my nanoc site to my providerâ€™s server, I have installed sitecopy. Sitecopy requires one of the ports packages. I chose fink, but Darwinports should also work I guess.</p>

<p>First, I downloaded the Xcode and iOS developer software from Apple (registration required as an Apple developer, but free). This installed without issue.</p>

<p>Then, I followed the instructions on the <a href="http://www.finkproject.org/download/srcdist.php">Fink website</a>. The instructions are quite clear I think. I tried to fill in as many local servers as possible while running <code class="language-plaintext highlighter-rouge">./bootstrap</code>. It would be a shame to transfer everything over the Atlantic cables, right?</p>

<p>What doe surprise me, is that many packages were installed, which I actually already have, many already built into OS X. One that jumped out to me, was python. I can only assume that this is done in order to have all libraries in control of Fink. I just really hope having some programs around twice, does not cause conflicts. fingers crossedâ€¦</p>

<h1 id="now-for-the-real-stuff">Now for the real stuff</h1>

<p>Once sitecopy was running, it actually ran very quickly. I copied an example rakefile <a href="http://www.remerson.plus.com/articles/nanoc-rake">From here</a> and followed the directory structure suggested by it:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nanoc/
  site/
    content/
    layouts/
    sitecopy/
      sitecopyrc
</code></pre></div></div>

<p>So, that is: no dotfiles, all files visible to the filesystem. Of course, this is not the default for sitecopy, so we specify the sitecopy rc file locations in the rakefile.</p>

<p>Then, I created the sitecopyrc as follows:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>site my.pretty.name
server ftp.server.url
remote /
local ~/nanoc/pragtich/trunk/output/
username myFTPusernae
password thepassword
protocol ftp
</code></pre></div></div>

<p>Where the folder after <code class="language-plaintext highlighter-rouge">local</code> is the nanoc <code class="language-plaintext highlighter-rouge">output</code> folder.</p>

<p>I then used the initialization from the example rakefile:
    sitecopy -r sitecopy/sitecopyrc -p sitecopy -i my.pretty.name
And crated a â€˜compile and uploadâ€™ rake addition to the <code class="language-plaintext highlighter-rouge">Rakefile</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>desc "compile and upload."
task :co do
  system 'nanoc co &amp;&amp; sitecopy  -r sitecopy/sitecopyrc -p sitecopy -u my.pretty.name'
end
</code></pre></div></div>

<p>So now, each time I edit something in my page, I only have to goâ€¦</p>

<p>rake co</p>

<p>â€¦and the entire thing is recompiled and synchronized to the server.</p>

<h1 id="mission-accomplished">Mission accomplished!</h1>

<h1 id="update">Update</h1>

<p>When I started using <code class="language-plaintext highlighter-rouge">git</code>, I needed to add a line to the
<code class="language-plaintext highlighter-rouge">sitecopyrc</code>. I added several of the disturbing dotfiles (which my
server was not allowing me to upload) to the <code class="language-plaintext highlighter-rouge">exclude</code> list. The
<code class="language-plaintext highlighter-rouge">sitecopy/sitecopyrc</code> now looks something like:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>site my.pretty.name
server ftp.server.url
remote /
local ~/nanoc/pragtich/output/
username myFTPusernae
password thepassword
protocol ftp
exclude .DS_Store
exclude .git
</code></pre></div></div>

<p>This saves a lot of error messages, which eventually led to a failing sitecopy.</p>

:ET