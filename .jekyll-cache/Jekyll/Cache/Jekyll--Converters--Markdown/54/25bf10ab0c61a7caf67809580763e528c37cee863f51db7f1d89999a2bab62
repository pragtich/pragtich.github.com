I"¿<h1 id="the-init-file-problem">The init file problem</h1>

<p>For my Kippycam project, I am trying to run the mjpg-streamer with various instances, so that I can stream from multiple cameras from my TL-WR3020 or TL-WR703N routers. There is a nice init and config system that comes with the mjpg-streamer package in OpenWRT, that does most of the work. It puts configuration for the server in the UCI file <code class="language-plaintext highlighter-rouge">/etc/config/mjpg-streamer</code>, and the <code class="language-plaintext highlighter-rouge">/etc/init.d/mjpg-streamer</code> script actually loops over any possible configurations already. So, to instantiate multiple servers, I only need to add a second server definition in the config file.</p>

<p>BUT, then I get the following error in the logfile, and the second server does not start:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: Using V4L2 device.: /dev/video0
Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: Desired Resolution: 640 x 481
Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: Frames Per Second.: 2
Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: Format............: MJPEG
Jan  2 09:41:32 OpenWrt user.info MJPG-streamer [1580]: init_VideoIn failed
</code></pre></div></div>

<p>The key is they incorrectly detected device name <code class="language-plaintext highlighter-rouge">/dev/video0</code> for the second camera. This is simply the default hardcoded into mjpg-streamer. It is not properly picking up the device name. Then, trying to open <code class="language-plaintext highlighter-rouge">/dev/video0</code> a second time, will of course fail.</p>

<h1 id="the-solution">The solution</h1>

<p>I do not understand the root cause fully, but it is clear that the <code class="language-plaintext highlighter-rouge">/etc/init.d/mjpg-streamer</code> script contains some layout so that it is more legible. This layout does, however, introduce some whitespace into the command line that is causing our trouble. I will leave analysis of the true root cause to the experts, but describe the quick and dirty solution.</p>

<p>This is a part of the original file, below. The problem is with the line continuation with slashes.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!bash
start_instance() {
	local s="$1"

	section_enabled "$s" || return 1

	config_get device "$s" 'device'
	config_get resolution "$s" 'resolution'
	config_get fps "$s" 'fps'
	config_get www "$s" 'www'
	config_get port "$s" 'port'

	[ -c "$device" ] || {
		error "device '$device' does not exist"
		return 1
	}

	service_start /usr/bin/mjpg_streamer --input "input_uvc.so \   # &lt;=== Problem is here
		--device $device --fps $fps --resolution $resolution" \
		--output "output_http.so --www $www --port $port"
}
</code></pre></div></div>

<p>I simply removed the backslashed line continuations and put everything in one line, and that solves the issue for me:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!bash
service_start /usr/bin/mjpg_streamer --input "input_uvc.so --device $device --fps $fps --resolution $resolution"  --output "output_http.so --www $www --port $port"
</code></pre></div></div>

<h1 id="correcting-pidfile-issue">Correcting PIDfile issue</h1>

<p>There is a second issue, because the default <code class="language-plaintext highlighter-rouge">service_start</code> behaviour is to prevent starting of multiple instances of the same daemon. So, we need to explicitly make sure that it does make multiple instances for us (because we are asking nicely). There are several ways to this, but I chose to explicitly help by supplying a pid file name for each camera. By using the unique configuration name from the config file, these will be unique. It is an easy edit in two places of <code class="language-plaintext highlighter-rouge">/etc/init.d/mjpg-streamer</code>. First, the function <code class="language-plaintext highlighter-rouge">start_instance</code> again:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!bash
start_instance() {
	local s="$1"

	section_enabled "$s" || return 1

	SERVICE_PID_FILE=${PIDLOC}-${s}.pid

	config_get device "$s" 'device'
	config_get resolution "$s" 'resolution'
	config_get fps "$s" 'fps'
	config_get www "$s" 'www'
	config_get port "$s" 'port'

	[ -c "$device" ] || {
		error "device '$device' does not exist"
		return 1
	}

	service_start /usr/bin/mjpg_streamer --input "input_uvc.so --device $device --fps $fps --resolution $resolution"  --output "output_http.so --www $www --port $port"

}
</code></pre></div></div>

<p>So in short, I generate a <code class="language-plaintext highlighter-rouge">$SERVICE_PID_FILE</code> that uniquely identifies the service. Of course, for killing the service we need to go back to the same pidfile:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#!bash
stop_instance() {
	local s="$1"

	section_enabled "$s" || return 1

	SERVICE_PID_FILE=${PIDLOC}-${s}.pid

	service_stop /usr/bin/mjpg_streamer
}
</code></pre></div></div>

<h1 id="configuration">Configuration</h1>

<p>Now, it is really easy to edit <code class="language-plaintext highlighter-rouge">/etc/config/mjpg-streamer</code> for multiple devices. Do be careful not to exceed the memory of your device, and also the USB and memory bandwidths, or you may make the device very unstable. Adding a name for each <code class="language-plaintext highlighter-rouge">config</code> heading is not strictly necessary, but very helpful as it gives some identification. I am assuming that each device has a fixed <code class="language-plaintext highlighter-rouge">/dev/video</code> devicename, which is the case on my device as long as I do not replug any camera.</p>

<p>This is my config file:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>config mjpg-streamer c920
	option device		"/dev/video0"
	option enabled		"1"
	option resolution	"960x720"	
	option fps		"3"
	option www		"/www/webcam"
	option port		"8080"

config mjpg-streamer logi
	option enabled		"1"
	option device		"/dev/video1"
	option resolution	"640x480"
	option fps		"2"
	option www		"/www/webcam"
	option port		"8081"
</code></pre></div></div>

<h1 id="version-update">Version update</h1>

<p>The packages version of the mjpg-streamer was old. I actually compiled my own version of mjpg-streamer by updating the packages <code class="language-plaintext highlighter-rouge">Makefile</code> in the OpenWRT buildroot. A nice description of the process of building with buildroot is what I roughly followed <a href="https://forum.openwrt.org/viewtopic.php?id=34676">from this post in the forums</a>, which links to <a href="http://wiki.openwrt.org/doc/howto/build">this wiki page after installing the prerequisites</a>. After <code class="language-plaintext highlighter-rouge">./scripts/feeds install -a</code>, I found the Makefile for mjpg-streamer (somewhere in <code class="language-plaintext highlighter-rouge">tmp</code>, if I remember correctly) and updated it to the latest SVN revision number. This did solve some instability issues I was facing with random reboots, so I highly recommemd going this way.</p>

<p>Again, maybe I should learn how to submit patches for OpenWRT to help improve itâ€¦</p>
:ET